[ { "title": "pythonTip 178 反素数(逆向拼写的素数)", "url": "/posts/pythonTip-178-%E5%8F%8D%E7%B4%A0%E6%95%B0(%E9%80%86%E5%90%91%E6%8B%BC%E5%86%99%E7%9A%84%E7%B4%A0%E6%95%B0)/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 23:07:24 +0800", "snippet": "题目描述：给你一个正整数n(1 &amp;lt;= n &amp;lt;= 100), 请你输出从小到大排列的的第n个反素数。示例：输入：n = 1输出：13分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 177 回文素数", "url": "/posts/pythonTip-177-%E5%9B%9E%E6%96%87%E7%B4%A0%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 23:06:24 +0800", "snippet": "题目描述：示例：输入：n = 1输出：2分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 176 计算表达式", "url": "/posts/pythonTip-176-%E8%AE%A1%E7%AE%97%E8%A1%A8%E8%BE%BE%E5%BC%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 23:05:24 +0800", "snippet": "题目描述：示例：输入：L = “12-21”输出：0分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 175 汉诺塔", "url": "/posts/pythonTip-175-%E6%B1%89%E8%AF%BA%E5%A1%94/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 23:04:24 +0800", "snippet": "题目描述：示例：输入：n = 3输出：7分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 174 矩形个数", "url": "/posts/pythonTip-174-%E7%9F%A9%E5%BD%A2%E4%B8%AA%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 23:03:24 +0800", "snippet": "题目描述：示例：输入：n = 1m = 2输出：3分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 173 本原串", "url": "/posts/pythonTip-173-%E6%9C%AC%E5%8E%9F%E4%B8%B2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 23:02:24 +0800", "snippet": "题目描述：示例：输入：n = 1输出：2分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 172 绝对值排序", "url": "/posts/pythonTip-172-%E7%BB%9D%E5%AF%B9%E5%80%BC%E6%8E%92%E5%BA%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 23:01:24 +0800", "snippet": "题目描述：示例：输入：L = [4, 2, 25, -7777777, -100, 3, 157, 77777777, 367, -2]输出：77777777 -7777777 367 157 -100 25 4 3 2 -2分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 171 计算两点间的距离", "url": "/posts/pythonTip-171-%E8%AE%A1%E7%AE%97%E4%B8%A4%E7%82%B9%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 23:00:24 +0800", "snippet": "题目描述：示例：输入：x1 = 0y1 = 0x2 = 0y2 = 1输出：1.00分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 170 特殊的倍数", "url": "/posts/pythonTip-170-%E7%89%B9%E6%AE%8A%E7%9A%84%E5%80%8D%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:59:24 +0800", "snippet": "题目描述：示例：输入：n = 1输出：1分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 169 再谈数数II", "url": "/posts/pythonTip-169-%E5%86%8D%E8%B0%88%E6%95%B0%E6%95%B0II/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:58:24 +0800", "snippet": "题目描述：示例：输入：a = 1b = 1输出：0100000000分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 168 再谈数数", "url": "/posts/pythonTip-168-%E5%86%8D%E8%B0%88%E6%95%B0%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:57:24 +0800", "snippet": "题目描述：示例：输入：a = 1b = 1输出：0100000000分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 167 一个萝卜一个坑", "url": "/posts/pythonTip-167-%E4%B8%80%E4%B8%AA%E8%90%9D%E5%8D%9C%E4%B8%80%E4%B8%AA%E5%9D%91/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:56:24 +0800", "snippet": "题目描述：春天来了，小Py有n (1 &amp;lt; n &amp;lt; 2000)颗种子，标号为1~n。他想把这些种子种到田里，于是他在田里挖了n个坑，编号也为1~n。现在Py想把这些种子放到这些坑里（每个坑里只能放一颗种子），但是编号为i的种子不能放到编号为i的坑里，请你计算一共有多少种方法。示例：输入：n = 2输出：1分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 166 Excel列数", "url": "/posts/pythonTip-166-Excel%E5%88%97%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:55:24 +0800", "snippet": "题目描述：我们都知道Excel的列数是用字母表示的，比如第1列对应A，第27列对应AA。示例：输入：n = 1输出：A分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 165 表达式运算", "url": "/posts/pythonTip-165-%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BF%90%E7%AE%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:54:24 +0800", "snippet": "题目描述：示例：输入：n = 31输出：6分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 164 最长回文子串", "url": "/posts/pythonTip-164-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:53:24 +0800", "snippet": "题目描述：示例：输入：s = “mmlam”输出：3分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 163 DNA序列", "url": "/posts/pythonTip-163-DNA%E5%BA%8F%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:52:24 +0800", "snippet": "题目描述：示例：输入：L = [“ACGT”, “ATGC”, “CGTT”, “CAGT”]输出：8分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 162 字符串编辑", "url": "/posts/pythonTip-162-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E8%BE%91/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:51:24 +0800", "snippet": "题目描述：对于一个字符串，你可以进行三种操作：1.插入一个字符 2.删除一个字符 3.替换一个字符现在给出两个字符串a，b，判断其中的一个字符串是否能通过最多一次的操作转换为另一个字符串。若能，则打印YES，不能则打印NO。例如a=”pale”，b=”ple”，则输出：YES。示例：输入：a = “pale”b = “ple”输出：YES分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 161 压缩字符串", "url": "/posts/pythonTip-161-%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:50:24 +0800", "snippet": "题目描述： 给出一个字符串a，你需要通过将字符串中连续的字母表示为：字母+出现次数的方式来压缩 这个字符串。例如 “aabcccccaaa” 将被压缩成 “a2b1c5a3”。如果压缩后的字符串比原本的 字符串长，则直接打印原本的字符串a。 例如：a=”aabcccccaaa”, 则输出：a2b1c5a3示例：输入：a = “aabcccccaaa”输出：a2b1c5a3分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 160 阶乘除法", "url": "/posts/pythonTip-160-%E9%98%B6%E4%B9%98%E9%99%A4%E6%B3%95/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:49:24 +0800", "snippet": "题目描述：输入两个正整数 n, m,输出 n!/m!,其中阶乘定义为 n!= 123…n (n&amp;gt;=1)。 比如,若 n=6, m=3,则 n!/m!=6!/3!=720/6=120。是不是很简单?现在让我们把问题反过来:输入 k=n!/m!,找到这样的整数二元组(n,m) (n&amp;gt;m&amp;gt;=1)。如果答案不唯一,n 应该尽量小。比如,若 k=120,输出应该是 n=5, m=1,而不是 n=6, m=3,因为 5!/1!=6!/3!=120,而 5&amp;lt;6。输入变量为k，并且k&amp;gt;1，打印n和m，中间以空格分隔。例如：k=72, ..." }, { "title": "pythonTip 159 2017#新年快乐#2017", "url": "/posts/pythonTip-159-2017-%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90-2017/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:48:24 +0800", "snippet": "题目描述：新的一年即将到来，你发现了吗，2017年是一个特殊的年份，它是一个素数，下一个素数年份还要再等10年。任意给你一个年份y(2017 &amp;lt;= y &amp;lt;= 10^17)，请你判断其是否是素数年份。若是，则输出Yes,否则输出No。例如：y=2017, 则输出：Yesy=2018, 则输出：No示例：输入：y = 2017输出：Yes分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 158 调整调整回文", "url": "/posts/pythonTip-158-%E8%B0%83%E6%95%B4%E8%B0%83%E6%95%B4%E5%9B%9E%E6%96%87/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:47:24 +0800", "snippet": "题目描述：给定一个字符串s，你可以从中删除一些字符，使得剩下的串是一个回文串。如何删除才能使得回文串最长呢？输出需要删除的字符个数.例如: s=’abcda’, 输出： 2 s=’google’, 输出: 2示例：输入：s = “lkdsajfoeglasjfjkoahldhgasdkjfoejflsdfldkjfoegledkjsgoejgldksajcosdkjgoe”输出：39分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 157 矩形覆盖", "url": "/posts/pythonTip-157-%E7%9F%A9%E5%BD%A2%E8%A6%86%E7%9B%96/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:46:24 +0800", "snippet": "题目描述：我们可以用2*1的小矩形横着或者竖着去覆盖更大的矩形。请问用n(0示例：分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 156 双子积木塔", "url": "/posts/pythonTip-156-%E5%8F%8C%E5%AD%90%E7%A7%AF%E6%9C%A8%E5%A1%94/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:45:24 +0800", "snippet": "题目描述：双子积木塔的定义是利用积木搭建两个相同高度的塔。现在给你一系列积木的高度，请你判断利用这些积木能否搭建双子积木塔。如果可以，输出能搭成的最高高度，如果不能，则输出FAIL。积木的高度保存在整数列表H中，其中每个积木的高度不超过500000，且积木总高度不超过500000.例如：H = [3, 4, 7]， 输出：7H = [10, 9, 2], 输出: FAILH = [15, 15, 14, 24, 14, 3, 20, 23, 15], 输出：64示例：输入：H = [3]输出：FAIL分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 155 消失的硬盘容量", "url": "/posts/pythonTip-155-%E6%B6%88%E5%A4%B1%E7%9A%84%E7%A1%AC%E7%9B%98%E5%AE%B9%E9%87%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:44:24 +0800", "snippet": "题目描述：我们经常发现，购买的硬盘上标注的容量比系统显示的要少。比如，你买了100MB的硬盘，插到电脑上，操作系统却显示硬盘的大小只有95MB，这5MB消失了。这是因为硬盘的制造商认为”一千” 是1000，但是操作系统认为”一千”是1024。有几个描述硬盘大小的单位，他们是byte, kilobyte, megabyte, gigabyte, terabyte, petabyte, exabyte, zetabyte and yottabyte。每一个都是等于前一个的”一千”倍。举个例子 1 gigabyte 是 “一千” megabytes，比如制造商认为 1 gigabyte 是 1..." }, { "title": "pythonTip 154 生成括号序列", "url": "/posts/pythonTip-154-%E7%94%9F%E6%88%90%E6%8B%AC%E5%8F%B7%E5%BA%8F%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:43:24 +0800", "snippet": "题目描述：给你一个正整数n，请你生成所有包含n对小括号的合法括号序列，分别将合法的序列按照字典序升序 输出，每个序列占一行。例如，n=3, 则输出：((()))(()())(())()()(())()()()示例：输入：n = 3输出：((()))(()())(())()()(())()()()分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 153 最小路径和", "url": "/posts/pythonTip-153-%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:42:24 +0800", "snippet": "题目描述：给你一个由非负整数组成的矩阵M，请你找到一条从矩阵左上角到右下角的路径，使其和最小，并输出最小路径的和（注意：每次只能向右走或者向下走）。例如：M = [[1, 2, 3], [1, 2, 3], [1, 3, 3]]则输出：9说明：最小路径上的值分别为（1-&amp;gt;1-&amp;gt;1-&amp;gt;3-&amp;gt;3)。示例：输入：M = [[1, 2, 3], [1, 2, 3], [1, 2, 3]]输出：8分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 152 全排列序列II", "url": "/posts/pythonTip-152-%E5%85%A8%E6%8E%92%E5%88%97%E5%BA%8F%E5%88%97II/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:41:24 +0800", "snippet": "题目描述：数字集合[1,2,3, … , n]可以组成n!个不同的排列序列。将所有的序列按照字典序升序排序之后，请你输出第k个序列。和上题“全排列序列”不同的是，本题给定一个包含多组（n, k)的元组列表L，请你针对L中的每组(n, k)，输出其对应的结果，每个结果占一行。例如：L = [(3, 2), (3, 3), (3,5)], 则输出：132213312Note:L中的n在1到9的范围内，k在1到n!的范围内。2016.8.13 16:00: 感谢holidaylover指出，本题测试数据有误，已修改，原来不能通过的代码可以尝试再次提交。示例：输入：L = [[3, 1], [3..." }, { "title": "pythonTip 151 全排列序列", "url": "/posts/pythonTip-151-%E5%85%A8%E6%8E%92%E5%88%97%E5%BA%8F%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:40:24 +0800", "snippet": "题目描述：数字集合[1,2,3, … , n]可以组成n!个不同的排列序列。将所有的序列按照字典序升序排序之后，请你输出第k(从1开始）个序列。例如：n=3, k=4, 则输出：231Note:给定的n在1到9的范围内，k在1到n!的范围内。n=3时，所有的排列序列为：123132213231312321示例：输入：n = 3k = 1输出：123分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 150 list深度", "url": "/posts/pythonTip-150-list%E6%B7%B1%E5%BA%A6/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:39:24 +0800", "snippet": "题目描述：给你一个多层list L, 如 L=[1,2,3,[4,[5,6]]], 求出最内层[]的深度并输出,如样例L的结果为3示例：输入：L = [1, 2, 3, [4, [5, 6]]]输出：3分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 149 合法括号序列", "url": "/posts/pythonTip-149-%E5%90%88%E6%B3%95%E6%8B%AC%E5%8F%B7%E5%BA%8F%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:38:24 +0800", "snippet": "题目描述：给你一个只包含括号（’(‘、 ‘)’、 ‘{‘、 ‘}’、 ‘[’ 和 ‘]’）的字符串seq，请你判断该序列是否是合法的括号序列。合法请输出Yes，否则输出No。例如：seq=”()”, 输出Yesseq=”()[]{}”, 输出Yesseq=”(]”, 输出Noseq=”([)]”, 输出No示例：输入：seq = “()”输出：Yes分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 147 欧拉函数2", "url": "/posts/pythonTip-147-%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B02/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:37:24 +0800", "snippet": "题目描述：欧拉函数的定义是：对于n,Eurla(n)为与n互质的小于n的正整数的个数。给定n(n&amp;lt;=10000000),输出Eurla(n)示例：输入：n = 15输出：8分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 146 欧拉函数1", "url": "/posts/pythonTip-146-%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B01/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:36:24 +0800", "snippet": "题目描述：欧拉函数的定义是：对于n,Eurla(n)为与n互质的小于n的正整数的个数。给定n(n&amp;lt;=1000),输出Eurla(n)示例：输入：n = 10输出：4分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 145 幸运树", "url": "/posts/pythonTip-145-%E5%B9%B8%E8%BF%90%E6%A0%91/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:35:24 +0800", "snippet": "题目描述：小Py最近迷上了幸运数字。他所认为的幸运数字是指只由4或7组成的数字。比如44， 7774， 4都是幸运数字，而5， 17， 4437等就不是。现在小Py有一棵树, 这棵树有n个节点， n-1条无向边且保证树连通。现在每条边都有个权值， 如果该权值为幸运数， 那么这个边就是幸运边。小Py想知道存在多少个三元组(a, b, c)， 使得在树上， a到b的路径和b到c的路径上都至少存在一个幸运边。三元组的不同排序算作不同的结果。 比如(1, 2, 3), (2, 1, 3), (1, 3, 2)都是不同的三元组。现在给你这棵树的结构L，求三元组的个数。其中L是一个三元组的列表，每个..." }, { "title": "pythonTip 144 求解幂方程", "url": "/posts/pythonTip-144-%E6%B1%82%E8%A7%A3%E5%B9%82%E6%96%B9%E7%A8%8B/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:34:24 +0800", "snippet": "题目描述：定义方程y = x^x (x的x次幂），给你y(1 &amp;lt;= y &amp;lt;= 1000), 请你求出x的解，结果保留到小数点后3位。例如： y=2则输出：1.560示例：输入：y = 1输出：1.000分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 143 最小子串", "url": "/posts/pythonTip-143-%E6%9C%80%E5%B0%8F%E5%AD%90%E4%B8%B2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:33:24 +0800", "snippet": "题目描述：给你三个字符串a, b, c （0 &amp;lt; len(a) &amp;lt;= 100, 0 &amp;lt; len(b), len(c) &amp;lt;= 20)，请你找出a的某个子串，要求该子串长度最小，并且同时包含b和c。特别地，如果有多个这样的子串，则请输出字母序最小的一个，如果不存在这样的子串，输出No。例如：a=’abcd’, b=’ab’, c=’bc’, 则输出：abc示例：输入：a = “abcd”b = “ab”c = “bc”输出：abc分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 142 特殊回文数", "url": "/posts/pythonTip-142-%E7%89%B9%E6%AE%8A%E5%9B%9E%E6%96%87%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:32:24 +0800", "snippet": "题目描述：123321是一个非常特殊的数，它从左边读和从右边读是一样的。给你一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n(1&amp;lt;=n&amp;lt;=54)。按从小到大的顺序输出满足条件的整数，每个整数占一行,例如：n = 52, 则输出：899998989989998899示例：输入：n = 52输出：899998989989998899分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 141 月饼节快乐", "url": "/posts/pythonTip-141-%E6%9C%88%E9%A5%BC%E8%8A%82%E5%BF%AB%E4%B9%90/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:31:24 +0800", "snippet": "题目描述：祝筒子们月饼节快乐！！！你可知道我国是从哪一年开始将中秋节列为国家法定节假日的吗？什么，不知道？还不快去问度娘！！请你以阿拉伯数字的形式输出该年份。示例：分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 140 k差等数", "url": "/posts/pythonTip-140-k%E5%B7%AE%E7%AD%89%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:30:24 +0800", "snippet": "题目描述：k差等数的定义：任意两位之间的差的绝对值都为k的正十进制数,且不能有前导0。例如’1234’, ‘4321’都是1差等数。现在给你两个正整数n和k(1 &amp;lt; n &amp;lt;= 30, 0 &amp;lt;= k &amp;lt;= 9)，请你输出n位k差等数的个数。例如：n=2, k=5则输出：9Note: 2位的5差等数如下：16，27，38，49，50，61，72，83，94示例：输入：n = 2k = 5输出：9分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 139 吃糖果", "url": "/posts/pythonTip-139-%E5%90%83%E7%B3%96%E6%9E%9C/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:29:24 +0800", "snippet": "题目描述：小Py喜欢吃糖果，但是他有一个怪癖，就是不喜欢将一样的糖果放在一起吃，喜欢先吃一种，下一次吃另一种。 现在小Py获得了一批糖果，请你帮他计算，是否存在一种吃糖果的顺序，使得他能把所有的糖果吃完。现在给你一个正整数列表L(L的长度不超过100)，每个元素表示每种糖果的数量，如果存在某种顺序使得小Py能够吃完所有的糖果， 则输出Yes, 否则输出No.例如：L = [4, 1, 1]则输出： No L = [2, 2]则输出： Yes示例：输入：L = [5, 4, 3, 2, 1]输出：Yes分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 138 路径总数", "url": "/posts/pythonTip-138-%E8%B7%AF%E5%BE%84%E6%80%BB%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:28:24 +0800", "snippet": "题目描述：给你一个网格地图，网格图中有一个特殊点(特殊点保证不是右上角的点）。初始你站在地图的左下角，只能向右走和向上走，请你求出从网格左下角走到右上角，且不经过特殊点的方案总数。现在告诉你地图的行数和列数m, n (0 &amp;lt; m &amp;lt;= 30, 0 &amp;lt; n &amp;lt;= 30), 以及特殊点的坐标(x, y), 请你输出方案总数。例如：m = 5, n = 4, x = 2, y = 3则输出：23Note: 样例输入对应的地图如下，其中#为特殊点….….…...#.….示例：输入：m = 3n = 4x = 2y = 3输出：4分析:稍等片..." }, { "title": "pythonTip 137 单身狗II", "url": "/posts/pythonTip-137-%E5%8D%95%E8%BA%AB%E7%8B%97II/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:27:24 +0800", "snippet": "题目描述：故事背景和“单身狗”相同，只不过这次Party中混进了两只单身狗，请你输出这两只单身狗的编号，小编号在前，大编号在后，以一个空格隔开。例如：L=[1,1,4,4,3,5,5,7]则输出：3 7示例：输入：L = [1, 1, 4, 4, 3, 5, 5, 7]输出：3 7分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 136 单身狗", "url": "/posts/pythonTip-136-%E5%8D%95%E8%BA%AB%E7%8B%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:26:24 +0800", "snippet": "题目描述：自然界存在两种狗：恩爱狗和单身狗。恩爱狗总是成对出现，单身狗总是单个活动。假设每只狗都有一个编号，每对恩爱狗的编号相同。恩爱狗协会组织了一次恩爱狗Party，会场混进了一只单身狗，请你帮助他们找出这只单身狗。 给你一个长度为n（1&amp;lt; n &amp;lt; 1000000）的正整数列表L，表示每只狗的编号， 请你输出单身狗的编号。例如：L=[1,1,4,4,3,5,5]则输出：3示例：输入：L = [1, 1, 4, 4, 3, 5, 5]输出：3分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 135 完美数II", "url": "/posts/pythonTip-135-%E5%AE%8C%E7%BE%8E%E6%95%B0II/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:25:24 +0800", "snippet": "题目描述：把只包含因子2、3和5的数称作完美数。例如6、8都是完美数，但14不是，因为它包含因子7。习惯上我们把1当做是第一个完美数。求按从小到大的顺序的第n个完美数。给你一个正整数n (1 &amp;lt;= n &amp;lt;= 10^5),请你输出答案。例如：n=3则输出：3示例：输入：n = 1输出：1分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 134 小Py的计算器", "url": "/posts/pythonTip-134-%E5%B0%8FPy%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:24:24 +0800", "snippet": "题目描述： 以往的操作系统内部的数据表示都是二进制方式，小Py新写了一个操作系统，系统内部的数据表示为26进制，其中0-25分别由a-z表示。现在小Py要在这个操作系统上实现一个计算器，这个计算器要能实现26进制数的加法运算。你能帮小Py实现这个计算器吗？给你两个表示26进制数的字符串s1和s2, 每个数的位数最多为10位,我们可以保证相加的结果的位数最多也是10位。 每个数会用小Py所设计的操作系统中的表示方法来表示，如：bsadfasdf。即每个数的各个位均由26个小写字母a-z中的一个来表示。 请你输出s1和s2相加的结果，结果也用题目中描述的26进制数表示。例如：s1=’ba’,..." }, { "title": "pythonTip 133 完美数", "url": "/posts/pythonTip-133-%E5%AE%8C%E7%BE%8E%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:23:24 +0800", "snippet": "题目描述：把只包含因子2、3和5的数称作完美数。例如6、8都是完美数，但14不是，因为它包含因子7。习惯上我们把1当做是第一个完美数。求按从小到大的顺序的第n个完美数。给你一个正整数n (1 &amp;lt;= n &amp;lt;= 1500),请你输出答案。例如：n=3则输出：3示例：输入：n = 1输出：1分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 132 变态超级楼梯", "url": "/posts/pythonTip-132-%E5%8F%98%E6%80%81%E8%B6%85%E7%BA%A7%E6%A5%BC%E6%A2%AF/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:22:24 +0800", "snippet": "题目描述：有一楼梯共n级，刚开始时你在第零级，若每次你可以上1级，也可以上2级，…，也可以上n级。要走上第n级，共有多少种走法？ 给你一个正整数n(1 &amp;lt; n &amp;lt; 1000), 请你输出答案。例如： n = 2输出：2示例：输入：n = 2输出：2分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 131 新年祝福", "url": "/posts/pythonTip-131-%E6%96%B0%E5%B9%B4%E7%A5%9D%E7%A6%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:21:24 +0800", "snippet": "题目描述：新年将至，PythonTip提前祝大家新年快乐，心想事成^_^。 输入：无输出：Happy New Year, wow!示例：分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 130 整数编码", "url": "/posts/pythonTip-130-%E6%95%B4%E6%95%B0%E7%BC%96%E7%A0%81/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:20:24 +0800", "snippet": "题目描述：我们的编码规则为：1到26之间的26个数据，可以编码为对应的’A’-’Z’。现在给你一个纯数字字符串s(s的长度不超过150)，请你输出该串有多少种编码方式（所有输入至少有一种编码方式）。例如：s=’121’, 则输出：3s = ‘101’, 则输出：2Note:’121’对应的三种编码分别为：ABA(1,2,1), AU(1,21), LA(12,1). ‘101’对应的两种编码分别为：AA(1,01), JA(10, 1).示例：输入：s = “3242352352342312342032403213423123420324032134231234203240321..." }, { "title": "pythonTip 129 特殊的9位数", "url": "/posts/pythonTip-129-%E7%89%B9%E6%AE%8A%E7%9A%849%E4%BD%8D%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:19:24 +0800", "snippet": "题目描述：1~9的9个数字， 每个数字只能出现一次， 要求这样的9位数：其第一位能被1整除， 前两位能被2整除， 前三位能被3整除…依次类推，前9位能被9整除。所有的9位数中，只有一个数字满足这些条件，请你输出这个9位数。示例：分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 128 数数II", "url": "/posts/pythonTip-128-%E6%95%B0%E6%95%B0II/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:18:24 +0800", "snippet": "题目描述：给你一个正整数n(0 &amp;lt; n &amp;lt; 10^20), 请你输出0到n之间“1”出现的次数。例如 n = 4时， [1, 2, 3, 4]出现了1个”1”,因此输出1 n = 12时，[1,2,3,4,5,6,7,8,9,10,11,12]出现了5个”1”， 因此输出5示例：输入：n = 3输出：1分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 127 数数", "url": "/posts/pythonTip-127-%E6%95%B0%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:17:24 +0800", "snippet": "题目描述：给你一个正整数n(0 &amp;lt; n &amp;lt; 1000000), 请你输出0到n之间“1”出现的次数。例如 n = 4时， [1, 2, 3, 4]出现了1个”1”,因此输出1 n = 12时，[1,2,3,4,5,6,7,8,9,10,11,12]出现了5个”1”， 因此输出5示例：输入：n = 3输出：1分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 126 编码问题", "url": "/posts/pythonTip-126-%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:16:24 +0800", "snippet": "题目描述：给你一个UTF-8编码的汉字s, 请你输出该汉字对应的GBK编码。一个汉字的GBK编码为两个字节，你请输出编码的十六进制值（若有字母，输出小写形式)，两个字节之间以一个空格隔开。如：s = ‘你’,则输出：c4 e3。示例：输入：s = “\\u4f60”输出：c4 e3分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 125 木棒分割", "url": "/posts/pythonTip-125-%E6%9C%A8%E6%A3%92%E5%88%86%E5%89%B2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:15:24 +0800", "snippet": "题目描述：Py要把一根长木棒分割成n段,首先把长木棒分割成两段,然后每次从分割出来木棒中取出一根来分割成两段,最后得到n段.把一根长为m的木棒分成两段的费用为m.Py希望分割的费用尽可能少,请你找到这个最小费用..给你一个正整数n(1&amp;lt;=n&amp;lt;=2000，表示分割成多少段)和一个长度为n的正整数列表L(L中的元素表示分割成的每一段的长度),长木棒的长度等于这n个数的和,分割中不会有损失.请你输出一个正整数，表示分割所需的最少总费用。如：n = 5L = [1,2,3,4,5]则输出：33提示：原始木棒的长度为15,首先分割为6和9两段(费用15),然后把长为9的..." }, { "title": "pythonTip 124 田忌赛马", "url": "/posts/pythonTip-124-%E7%94%B0%E5%BF%8C%E8%B5%9B%E9%A9%AC/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:14:24 +0800", "snippet": "题目描述：田忌和齐王要进行赛马，每匹马都有一个武力值（正整数），武力值大的马能赛过武力值小的马。如果他们各有n匹马，齐王让他的马按从优到劣的顺序出赛，田忌可以按任意顺序选择他的赛马出赛。赢一局，田忌可以得到200两银子，输一局，田忌就要输掉200两银子，平局的话不输不赢。 请问田忌最多能赢多少银子?现在给你两个整数列表la和lb(列表长度不大于1000)，la中的元素分别表示田忌的马的武力值，lb中的元素表示齐王的马的武力值，请你输出一个整数，表示田忌至多可以赢多少银子，如果田忌赢不了，就输出一个负数，表示田忌最少要输多少银子。如：la = [92, 83, 71]lb = [95, 8..." }, { "title": "pythonTip 122 基因串", "url": "/posts/pythonTip-122-%E5%9F%BA%E5%9B%A0%E4%B8%B2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:13:24 +0800", "snippet": "题目描述：基因串是由一串有限长度的基因所组成的，其中每一个基因都可以用26个英文大写字母中的一个来表示，不同的字母表示不同的基因类型。一个单独的基因可以生长成为一对新的基因，而可能成长的规则是通过一个有限的成长规则集所决定的。每一个成长的规则可以用三个大写英文字母A1A2A3来描述，这个规则的意思是基因A1可以成长为一对基因A2A3。 用大写字母S来表示一类称作超级基因的基因，因为每一个基因串都是由一串超级基因根据给出的规则所成长出来的。 给你若干成长的规则和一个目标基因串，对于每个基因串，请你判断它是否可以由一个有限长度的超级基因串成长得出。如果可以，输出可成长为该基因串的最短超级基因..." }, { "title": "pythonTip 121 地板覆盖", "url": "/posts/pythonTip-121-%E5%9C%B0%E6%9D%BF%E8%A6%86%E7%9B%96/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:12:24 +0800", "snippet": "题目描述：用规格为21的瓷砖覆盖大小为3n的地板有多少种方案(必须完全覆盖地板，且不能破坏单个瓷砖）？ 现在给你正整数n（0示例：分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 120 木棒问题", "url": "/posts/pythonTip-120-%E6%9C%A8%E6%A3%92%E9%97%AE%E9%A2%98/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:11:24 +0800", "snippet": "题目描述：小Py有n根长度不同的木棒,有一天它把所有的木棒排成一行,用S1,S2,S3,…,Sn表示.量出每个木棒的长度Sk(1&amp;lt;=k&amp;lt;=n),它发现有两个木棒Si和Sj(1&amp;lt; = i &amp;lt; j &amp;lt; = n),它们之间的所有木棒都比Si要长比Sj短. 现在给出每个木棒的长度,你需要找到满足上述条件的两个木棒Si和Sj,使得j-i最大. 木棒的长度存放在列表L中，请你输出满足条件的j-i的最大值，如果不存在，则输出-1。如：L = [5,4,3,6], 则输出：1。示例：输入：L = [5, 4, 3, 6]输出：1分析:..." }, { "title": "pythonTip 119 矩阵乘方和", "url": "/posts/pythonTip-119-%E7%9F%A9%E9%98%B5%E4%B9%98%E6%96%B9%E5%92%8C/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:10:24 +0800", "snippet": "题目描述：给定一个n*n的矩阵A,正整数k以及正整数m(n&amp;lt;=30,k&amp;lt;=1000000000,m&amp;lt;=10000),请求出S=A+A^2+A^3+A^4+…+A^k的值.A^x表示x个A相乘的结果. 输出矩阵S对m取模后的值,包括n行,每行n个数，每行数字之间以一个空格隔开。A是一个二维列表，例如：n=2, k=2, m=4,A=[[0,1],[1,1]]则输出：1 22 3示例：输入：n = 2k = 2m = 4A = [[0, 1], [1, 1]]输出：1 22 3分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 118 约瑟夫问题", "url": "/posts/pythonTip-118-%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:09:24 +0800", "snippet": "题目描述：约瑟夫问题：有ｎ只猴子，按顺时针方向围成一圈选大王（编号从１到ｎ），从第１号开始报数，一直数到ｍ，数到ｍ的猴子退出圈外，剩下的猴子再接着从1开始报数。就这样，直到圈内只剩下一只猴子时，这个猴子就是猴王，现在给你n和m，请你输出最后猴王的编号。示例：输入：n = 6m = 2输出：5分析:稍等片刻。。。。代码:精彩马上继续。。。。。" }, { "title": "pythonTip 117 因数（来自2013年ACM-ICPC世界总决赛）", "url": "/posts/pythonTip-117-%E5%9B%A0%E6%95%B0-%E6%9D%A5%E8%87%AA2013%E5%B9%B4ACM-ICPC%E4%B8%96%E7%95%8C%E6%80%BB%E5%86%B3%E8%B5%9B/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:08:24 +0800", "snippet": "题目描述：数论的基本定理指出，对于任意大于1的整数，总有唯一的质因数分解。但是质因数的组合形式通常不止一种：如：10 = 2×5 = 5×220 = 2×2×5 = 2×5×2 = 5×2×2设f(k)为组合的个数，有f(10) = 2, f(20) = 3 .给定正整数n（0 &amp;lt; n &amp;lt; 1000) ，总存在至少一个k，使得f(k) = n .求满足条件的k的最小值。如：n=1,则输出2。 因为2=2 只有一种分解形式,故f(2)=1,且2是满足条件的最小的整数，故输出2。示例：输入：n = 1输出：2分析:从数字 2 开始 依次迭代，直到出现满足情况的数字..." }, { "title": "pythonTip 116 日期计算", "url": "/posts/pythonTip-116-%E6%97%A5%E6%9C%9F%E8%AE%A1%E7%AE%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:07:24 +0800", "snippet": "题目描述：给你一个日期的字符串s，s的格式为 ‘yyyy-mm-dd’（保证给定的日期合法）， 请你输出该日期是该年份的第几天，第几周,用一个空格隔开这两个数字。注意，天和周都从1开始计数。一周的开始是周日，结束是周六，例如2014-01-04是周六（这是2014年的第一周的最后一天），2014-01-05是周日（这是第二周的开始）。例如：s = ‘2014-01-01’, 则输出：1 1s = ‘2014-01-05’, 则输出：5 2Note:感谢@hhbsng指出，python系统的时间库有bug，例如，对于1989，给出的周数有误。数据已更新，之前利用时间库直接解的代码无法再次通..." }, { "title": "pythonTip 115 结尾0的个数III", "url": "/posts/pythonTip-115-%E7%BB%93%E5%B0%BE0%E7%9A%84%E4%B8%AA%E6%95%B0III/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:06:24 +0800", "snippet": "题目描述：给你两个正整数n（1 &amp;lt;= n &amp;lt;= 1000000000000000000)和m（2 &amp;lt;= m &amp;lt;= 100), 请你计算n!转换为m进制后末尾0的个数。如：n = 10, m = 10, 则输出2.示例：输入：n = 10m = 10输出：2分析:和前面的一题，一摸一样，只是这个题的数据量大了一点，但是我的代码 依然可以。nice, 我真棒。相同数字不同进制下末尾0的个数不一样， 而10进制是我们最常见的一种进制，因此我们首先以10进制为例来进行分析。10 = 2 * 5 = 1 * 10。 我们只需要记录 n! 的阶..." }, { "title": "pythonTip 114 结尾0的个数II", "url": "/posts/pythonTip-114-%E7%BB%93%E5%B0%BE0%E7%9A%84%E4%B8%AA%E6%95%B0II/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:05:24 +0800", "snippet": "题目描述：给你两个正整数n（1 &amp;lt;= n &amp;lt;= 1000000)和m（2 &amp;lt;= m &amp;lt;= 100), 请你计算n!转换为m进制后末尾0的个数。如：n = 10, m = 10, 则输出2.示例：输入： n = 10 m = 10输出：2分析:相同数字不同进制下末尾0的个数不一样， 而10进制是我们最常见的一种进制，因此我们首先以10进制为例来进行分析。10 = 2 * 5 = 1 * 10。 我们只需要记录 n! 的阶乘中含有 2 的个数 和 含有 5 的个数，然后取最小值即可。（含有 55个1，1个10。）对于 10! 的而言，..." }, { "title": "pythonTip 113 LTC-男人八题之八：电梯调度", "url": "/posts/pythonTip-113-LTC-%E7%94%B7%E4%BA%BA%E5%85%AB%E9%A2%98%E4%B9%8B%E5%85%AB-%E7%94%B5%E6%A2%AF%E8%B0%83%E5%BA%A6/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:04:24 +0800", "snippet": "题目描述：有一栋楼, 里面只有一架电梯. 电梯上一层需 4s,停下是瞬时的，再次启动（不含从1楼的那次启动）要10秒, 人上下一层楼都要20秒.现在电梯初始在一楼，所有人也都在一楼，告诉你人群需要到达的楼层情况, 求一个安排计划,使最后到达自己目的地的人的用时最短(1 层和最后一层的等待不计时).现在给你一个正整数List L，L[i]表示有人的目的地在第L[i]层，L的长度不超过300000， 2 &amp;lt;= L[i] &amp;lt;= 30000 ,请你输出最后一个到达目的地的人所用的最短时间.如：L = [4, 5, 10], 则输出：46 说明：此时的安排：需要在..." }, { "title": "pythonTip 112 LTC-男人八题之七：音乐旋律", "url": "/posts/pythonTip-112-LTC-%E7%94%B7%E4%BA%BA%E5%85%AB%E9%A2%98%E4%B9%8B%E4%B8%83-%E9%9F%B3%E4%B9%90%E6%97%8B%E5%BE%8B/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:03:24 +0800", "snippet": "题目描述：给定一个正整数序列L（L的长度不超过20000，1&amp;lt;=L[i]&amp;lt;=88)，问这个序列中存在的最长一个符合下列三个条件的子序列长度是多少：条件1：子序列A的长度不小于5条件2：存在另一个子序列B，且A和B不重叠条件3：A和B的长度一样，且A[0]-B[0] = A[1]-B[1] = … = A[k]-B[k],及两个子序列对应项的差相等。请你输出符合条件的最长的子序列A的长度。如：L = [25, 27, 30, 34, 39, 45, 52, 60, 69, 79, 69, 60, 52, 45, 39, 34, 30, 26, 22, 18, 8..." }, { "title": "pythonTip 111 LTC-男人八题之六：硬币组合", "url": "/posts/pythonTip-111-LTC-%E7%94%B7%E4%BA%BA%E5%85%AB%E9%A2%98%E4%B9%8B%E5%85%AD-%E7%A1%AC%E5%B8%81%E7%BB%84%E5%90%88/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:02:24 +0800", "snippet": "题目描述：小Py手里有面值为A1,A2,A3…的硬币若干枚，现在他想知道，用手里的硬币能够拼凑出多少种不超过m的不同钱数的数目。给你一个正整数m(m &amp;lt;= 100000)和两个等长的正整数List L1和L2(L2[i] &amp;lt;= 1000), L1中的元素表示硬币的面值， L2中的元素表示对应面值硬币的数目，即L2[i]表示小Py拥有的面值为L1[i]的硬币个数。请你输出小Py利用手中的硬币能够拼凑出的不同钱数的数目。如：L1 = [1, 4], L2 = [2, 1], m = 100, 则输出：4示例：输入：m = 10L1 = [1, 2, 4]L2 = ..." }, { "title": "pythonTip 110 LTC-男人八题之五：树", "url": "/posts/pythonTip-110-LTC-%E7%94%B7%E4%BA%BA%E5%85%AB%E9%A2%98%E4%B9%8B%E4%BA%94-%E6%A0%91/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:01:24 +0800", "snippet": "题目描述：给你一个含有n个顶点的无向树，树上每条边都有一个长度p(p是不超过1001的正整数).定义dist(u, v)表示节点u到v的最短距离。给你一个k，请你求出树上满足dist(u, v) &amp;lt;= k的点对数目，注意u不能和v相同。给你一个正整数k和二维List L, 其中L中的每行是一个三元组[u, v, p],表示一条边,其中u和v表示节点，p表示长度，请你求出满足条件的点对数目。示例：输入：k = 4L = [[1, 2, 3], [1, 3, 1], [1, 4, 2], [3, 5, 1]]输出：8分析:男人八题系列，我基本上都是 将 C++ 代码变换成了 P..." }, { "title": "pythonTip 109 LTC-男人八题之四：新式取石子游戏", "url": "/posts/pythonTip-109-LTC-%E7%94%B7%E4%BA%BA%E5%85%AB%E9%A2%98%E4%B9%8B%E5%9B%9B-%E6%96%B0%E5%BC%8F%E5%8F%96%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 22:00:24 +0800", "snippet": "题目描述：小明和小红参加一种新的取石子游戏。游戏开始时有 n （1 &amp;lt;= n &amp;lt;= 10)堆石子，参与游戏的两个选手轮流取走或移动石子。在每一轮中，选手选择一个石子堆，从该堆石子中拿走至少一个石子。然后，该选手可以多次地从该堆中剩下的石子中把任意多的个石子移动到其它堆中。当然，该选手也可以不移动任何石子。但是，注意，选手必须从选中的堆中取走至少一块石子。因此，随着游戏的进行，石子越来越少, 最后一个取完石子的人获胜。现在给你一个正整数list L(L的长度不超过10），每个元素代表相应石子堆石子的数目，如L[0]代表第一堆石子的数目，小明和小红都极其聪明，总能..." }, { "title": "pythonTip 108 LTC-男人八题之三：旅游线路问题", "url": "/posts/pythonTip-108-LTC-%E7%94%B7%E4%BA%BA%E5%85%AB%E9%A2%98%E4%B9%8B%E4%B8%89-%E6%97%85%E6%B8%B8%E7%BA%BF%E8%B7%AF%E9%97%AE%E9%A2%98/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:59:24 +0800", "snippet": "题目描述：给你一张基于网格的M x N的城镇地图（1≤M, N≤8），有些格子禁止入内，用“#”表示，其余格子用“.”（一个点）表示。现在你需要求出从左下角走到右下角，并且经过所有可以入内的格子一次且仅一次的路径的总数。给你一个二维List L，表示城镇地图, L中的每个元素为’#’或’.’,表示含义如上所述（注意N和M没给，可以由L得到)。如：L = [ [’.’, ‘.’], [’.’, ‘.’] ]此时的地图为：....输出：1L = [ [’#’, ‘.’, ‘.’], [’.’, ‘.’, ‘.’] ]此时的地图为：#..…输..." }, { "title": "pythonTip 107 LTC-男人八题之二：古老的取石子游戏", "url": "/posts/pythonTip-107-LTC-%E7%94%B7%E4%BA%BA%E5%85%AB%E9%A2%98%E4%B9%8B%E4%BA%8C-%E5%8F%A4%E8%80%81%E7%9A%84%E5%8F%96%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:58:24 +0800", "snippet": "题目描述：游戏的开始有n个排成一条线的石子堆，游戏的目标是将这些堆石子合并成一堆，合并的规则如下：Rule:每一步，游戏玩家只能合并相邻的两堆石子，得分是被合并的两堆石子数目之和。你的目标是求出合并所有石子能够得到的最小得分之和。给你一个正整数列表L,L中每个数字表示对应石子堆的石子数目，如L[0]表示第一个石子堆的石子数目，请你输出合并的最小得分之和。如：L=[100],则输出0L=[3, 4, 3], 则输出17.示例：输入：L = [100]输出：0分析:男人八题系列，我基本上都是 将 C++ 代码变换成了 Python 代码，仅供大家参考。代码:len_l = len(L)num..." }, { "title": "pythonTip 106 LTC-男人八题之一：连通图", "url": "/posts/pythonTip-106-LTC-%E7%94%B7%E4%BA%BA%E5%85%AB%E9%A2%98%E4%B9%8B%E4%B8%80-%E8%BF%9E%E9%80%9A%E5%9B%BE/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:57:24 +0800", "snippet": "题目描述：LTC不知道是谁？百度去！楼天成是也，楼教主当年提出来的男人八题系列，可谓经典中的经典。言归正传，本题的任务是，请你计算，具有n个节点的无向连通图有多少种不同的形态。n是一个正整数，1 &amp;lt;= n &amp;lt;= 50,请输出结果。如：n=3时，输出：4note：n=3，有如下四种不同的无向连通图A——-B A——-B A B A——-B . . . . . . . . . . . ..." }, { "title": "pythonTip 105 勇气的挑战", "url": "/posts/pythonTip-105-%E5%8B%87%E6%B0%94%E7%9A%84%E6%8C%91%E6%88%98/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:56:24 +0800", "snippet": "题目描述：给定n个点的坐标(x,y,z),且n&amp;lt;=50,从点1出发,怎么样才能走一条路径,访问每个点一次且仅一次,使走过的距离和最小? 现在给你一个list列表L，列表中每个元素是个三元组[x,y,z]（x,y,z都是整数）,表示坐标系上的一个点，列表长度不超过50.请你输出从第一个点（即L[0])出发，走完L中每个点的最小距离（保留小数点后1位小数）。例如：L = [[0,0,0], [1,1,0], [1,-1,0]]则输出：3.4示例：输入：L = [[1, 7, 6], [2, 6, 4], [4, 9, 5], [11, 11, 11], [8, 4, 6]]输出..." }, { "title": "pythonTip 104 Python之殇", "url": "/posts/pythonTip-104-Python%E4%B9%8B%E6%AE%87/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:55:24 +0800", "snippet": "题目描述：今年为什么Python这么火?因为今年是Python（英文意思是蛇）年！可是，可是蛇年就要结束了，但我们的Python会继续进行下去，我们期盼着下一个Python之年的到来。我们迫切的想要知道，哪年是Python年。现在的任务是，给你一个四位的纯数字字符串year,表示农历的年份，请你判断该年是否是Python年。若是，输出’Oh yeah,Python Year!’(不包括引号），否则输出’Oh my god,Not Python Year!’(不包括引号）.例如：year = ‘2013’则输出：Oh yeah,Python Year!year = ‘2014’则输出：Oh..." }, { "title": "pythonTip 103 输出交换次数", "url": "/posts/pythonTip-103-%E8%BE%93%E5%87%BA%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:54:24 +0800", "snippet": "题目描述：给你一个list L, 如 L=[2,8,3,50], 对L进行选择排序并输出交换次数,如样例L的结果为1示例：输入：L = [4, 2, 25, 7777777, 100, 3, 77777777, 77777777, 77777777, 77777777]输出：4分析:选择排序 这是一个关键。首先要明白选择排序的步骤是什么？选择排序选择排序 可以分为两个数组，第一个数组为 已排序数组， 第二个数组为 待排序数组。选择排序算法步骤： 初始化时，已排序数组为空 找到待排序数组中的最小元素 和 待排序数组中的第一个元素交换。（如果第一个元素就是最小元素，则不用交换） 将 待..." }, { "title": "pythonTip 102 又是字符串", "url": "/posts/pythonTip-102-%E5%8F%88%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:53:24 +0800", "snippet": "题目描述：给你一个长为N的字符串A: A0 A1 A2 A3 …… AN-1S(0) = A0 A1 A2 A3 …… AN-2 AN-1 S(1) = A1 A2 A3 …… AN-2 AN-1 A0 S(2) = A2 A3 …… AN-2 AN-1 A0 A1……S(N-1) = AN-1 A0 A1 A2 A3 …… AN-2 请你求出有多少个不同的i（0 &amp;lt;= i &amp;lt;= N - 1) ,使得S(i)和S(0)相等。如：A=”aaa”则输出：3示例：输入： A = “aaa”输出：3分析:如果题目的排版格式好一点，这个题目我们还是很容易看出..." }, { "title": "pythonTip 101 史上最简单的计算", "url": "/posts/pythonTip-101-%E5%8F%B2%E4%B8%8A%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%A1%E7%AE%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:52:24 +0800", "snippet": "题目描述：来放松一下，这是个不能再简单的问题。给你两个数a，b, 请你输出a+b和a-b的值，用一个空格隔开。如：a=3,b=2,则输出：5 1示例：输入：a = 4b = 5输出：9 -1分析:直接看代码。代码:print(a+b, a-b)" }, { "title": "pythonTip 100 计算GPA", "url": "/posts/pythonTip-100-%E8%AE%A1%E7%AE%97GPA/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:51:24 +0800", "snippet": "题目描述：每门课程的成绩分为五个等级：A,B,C,D,F(注意没有E),它们分别代表可以获得4,3,2,1,0个绩点.现在给你一个由大写字母构成的列表L，请你计算平均绩点，保留小数点后两位。若L中包含非法成绩等级，则输出-1.如：L = [“A”, “B”, “C”, “D”, “F”]则输出2.00示例：输入：L = [“A”, “B”, “C”, “D”, “F”]输出：2.00分析:直接贴代码，仅供参考。将表示等级的字符串转换成具体的绩点，然后求和取平均值即可。代码:gpa_map = { &#39;A&#39;: 4, &#39;B&#39;: 3, &#39;..." }, { "title": "pythonTip 99 编辑距离", "url": "/posts/pythonTip-99-%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/", "categories": "ACM， pythonTip", "tags": "简单", "date": "2020-12-13 21:50:24 +0800", "snippet": "题目描述：设 A 和 B 是 2 个字符串。要用最少的字符操作将字符串 A 转换为字符串 B。这里所说的字符操作包括(1)删除一个字符；(2)插入一个字符；(3)将一个字符改为另一个字符。将字符串 A 变换为字符串 B 所用的最少字符操作数称为字符串 A 到 B 的编辑距离，记为d(A，B)。试设计一个有效算法，对任给的 2 个字符串 A 和 B，计算出它们的编辑距离 d(A，B)。如：A=”fxpimu”B=”xwrs”则输出5.示例：输入：A = “fxpimu”B = “xwrs”输出：5分析:我们需要将 字符串A（源串） 转换成 字符串B（目标串），只有 3 种操作（见题目）。..." }, { "title": "pythonTip 98 寻找临界楼层", "url": "/posts/pythonTip-98-%E5%AF%BB%E6%89%BE%E4%B8%B4%E7%95%8C%E6%A5%BC%E5%B1%82/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:49:24 +0800", "snippet": "题目描述：你是国际民用压缩技术公司（International Civil Pack-technical Company, ICPC）的产品测试员。现在你有一项任务：测试包有特殊缓冲材料的玻璃围棋子的牢固度。如果围棋子从某个足够高的楼层落下来就会碎，但如果没有碎，缓冲材料会自动修复损伤部分，也就是说如果从6楼落下来不碎，从6楼把同一颗棋子丢1000次，它都不会碎（当然在现实中，围棋子从手中多落下几次就会碎）。我们定义一个临界楼层：围棋子从这个楼层或更高落下来会碎，且围棋子从任何比这个楼层低的楼层落下都不会碎。如果棋子从1楼丢下来也碎了，临界楼层就是1。你的任务就是利用你面前这座偶然发现的..." }, { "title": "pythonTip 97 圆的面积", "url": "/posts/pythonTip-97-%E5%9C%86%E7%9A%84%E9%9D%A2%E7%A7%AF/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:48:24 +0800", "snippet": "题目描述：给你两个圆，每个圆由三个参数表示，x,y,r, 其中(x,y)表示圆心坐标，r表示半径。现在给你这两个圆的参数，x1, y1, r1; x2,y2,r2, 请你求出这两个圆相交部分的面积，保留小数点后三位数。如：x1=20.0,y1=30.0,r1=15.0,x2=40.0,y2=30.0,r2=30.0则输出608.366。示例：输入：x1 = 20.0y1 = 30.0r1 = 15.0x2 = 40.0y2 = 30.0r2 = 30.0输出：608.366分析:这是一个数学问题。感觉学好数学对于编程还是有很大的帮助的。两个 圆 之间的位置关系有这么几种。假设 两圆心距离..." }, { "title": "pythonTip 96 Py的寻路系统", "url": "/posts/pythonTip-96-Py%E7%9A%84%E5%AF%BB%E8%B7%AF%E7%B3%BB%E7%BB%9F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:47:24 +0800", "snippet": "题目描述：Py是个没有方向感的人，经常在校园内迷路，所以他经常手里拿着一张地图。每天Py都在校园内转来转去，但是Py不是一个喜欢浪费时间的人，每次转悠的时候，他总想找到一条从起点到终点的最短路。现在这个任务就交给了你，希望你给Py设计一个查询系统，Py每次只需要输入起点和终点，你就要告诉Py这两点间的最短路的长度是多少。现在给你两个整数n和m以及一个三元组列表L，n表示地图上路口的数目，m表示地图上小路的个数，其中1 &amp;lt;= n &amp;lt;= 100，0 &amp;lt;= m &amp;lt; n(n-1)/2。列表L由m个三元组构成，每个三元组[a, b, len]..." }, { "title": "pythonTip 95 数字序列", "url": "/posts/pythonTip-95-%E6%95%B0%E5%AD%97%E5%BA%8F%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:46:24 +0800", "snippet": "题目描述：数字序列定义如下：f(1) = 1, f(2) = 1, f(n) = (A * f(n - 1) + B * f(n - 2)) % 7.现在给你A，B和n（1 &amp;lt;= A,B &amp;lt;= 1000, 1 &amp;lt;= n &amp;lt;= 1000000000)，请你计算f（n）的值。示例：输入： A = 1 B = 1 n = 3输出： 2分析:因为 1 &amp;lt;= n &amp;lt;= 1000000000, 所以如果使用传统的数组模拟方式，我们可能会超时，所以我们需要更加优秀的办法。矩阵快速幂 就是用来解决这种问题的。我们需要了解..." }, { "title": "pythonTip 94 整数划分", "url": "/posts/pythonTip-94-%E6%95%B4%E6%95%B0%E5%88%92%E5%88%86/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:45:24 +0800", "snippet": "题目描述：给你一个正整数N，请你求出一共有多少种方式用不超过N的正整数求和得到N。例如：N=4，则输出5.因为4只有如下五种求和方式：4 = 44 = 3 + 14 = 2 + 24 = 2 + 1 + 14 = 1 + 1 + 1 + 1示例：输入： N = 1输出： 1分析:整数划分问题。设 nums[N][M] 表示 将 整数 N 分解为不超过 M 的数相加的方案数。则：当 M == 1 或 N == 1 时，nums[N][1] = nums[1][M] = 1。当 N == M 时， nums[N][M]= 1 + nums[N][M-1]。 这里的 “1” 就是， 4 = 4..." }, { "title": "pythonTip 93 排序的精髓", "url": "/posts/pythonTip-93-%E6%8E%92%E5%BA%8F%E7%9A%84%E7%B2%BE%E9%AB%93/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:44:24 +0800", "snippet": "题目描述：给你一个整数list L,现在只允许你有一种操作：交换列表中相邻的两个元素。对于一个给定的L，请你输出至少需要多少次交换可以让L变成升序序列。如：L=[2, 8, 0, 3],则输出3。注解: 2 8 0 3swap (8 0)=&amp;gt; 2 0 8 3swap (2 0)=&amp;gt; 0 2 8 3swap (8 3)=&amp;gt; 0 2 3 8示例：输入：L = [2, 8, 0, 3]输出：3分析:这个题目本质是 求 逆序对。 我这里使用最简单的一种方式，有兴趣的同学可以去 百度一下，有更多的题解。代码:ans = 0for i, v in enum..." }, { "title": "pythonTip 92 解析HTML", "url": "/posts/pythonTip-92-%E8%A7%A3%E6%9E%90HTML/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:43:24 +0800", "snippet": "题目描述：我们每天都在浏览网页，HTML是网页的基础，现在请你模拟解析简单的HTML代码。我们这里定义的HTML只包括两个特殊标记 &amp;lt;hr&amp;gt; 和 -------具体的解析规则如下：rule1：你从输入中读入的一个单词，如果这个单词和当前行已有的长度加起来不超过80，则将该单词输出到当前行，否则另起一行，将该单词输出到下一行的开头；rule2：如果你从输入中读到的是&amp;lt;hr&amp;gt;,则换行rule3：如果你从输入中读到的是------,则另起一行输出80个’-‘（如果当前正好在新行的开始，则直接输出80个’-‘），并再次换行到新行的开始。ru..." }, { "title": "pythonTip 91 全排列", "url": "/posts/pythonTip-91-%E5%85%A8%E6%8E%92%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:42:24 +0800", "snippet": "题目描述：给你一个仅有小写字母组成的字符串s（len(s) &amp;lt; 10)，请你输出s内的所有字母的全排列，每行输出一个，按照字典序升序输出。如：s=”bbjd”,则输出：bbdjbbjdbdbjbdjbbjbdbjdbdbbjdbjbdjbbjbbdjbdbjdbb示例：输入：s = “bbjd”输出：bbdjbbjdbdbjbdjbbjbdbjdbdbbjdbjbdjbbjbbdjbdbjdbb分析:python 里面有一个内置的求全排列的函数。 from itertools import permutations所以我的思路就是得到全排列，然后排序再输出。代码:from..." }, { "title": "pythonTip 90 放棋子", "url": "/posts/pythonTip-90-%E6%94%BE%E6%A3%8B%E5%AD%90/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:41:24 +0800", "snippet": "题目描述：有一种大小为n x n的网格棋盘,棋盘中某些格子内有障碍物。现在将棋盘的状况告诉你，请你求出最多可以在棋盘上放置多少棋子，保证放置的棋子在同一行、同一列不会直接面对（中间无障碍物分隔，则为直接面对）。棋盘的状态用一个字符串列表L告诉你，一个4x4的棋盘的例子如下：L=[“.X..”, “….”, “XX..”, “….”]其中，X表示该位置有障碍物，.表示该位置无障碍物，棋子只能放在没有障碍物的地方。现在给你n和L，请你输出最多可以再棋盘上放置的棋子个数。如：n=4,L=[“.X..”, “….”, “XX..”, “….”]则输出5示例：输入：n = ..." }, { "title": "pythonTip 89 整数表示", "url": "/posts/pythonTip-89-%E6%95%B4%E6%95%B0%E8%A1%A8%E7%A4%BA/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:40:24 +0800", "snippet": "题目描述：在IA32上无符号的整型变量在内存中是“倒”存储的，如一个整数: 305419896 换算成 16进制是0x12345678， 在内存中从低地址到高地址的4个字节里的数据分别是 0x78 0x56 0x34 0x12 。你的任务是对于每个输入n, 输出其在内存中从低地址到高地址的存储数据。 表示十六进制数用到字母时，一律大写。如: 不能输出 0x1d，而要输出 0x1D。 每字节之间用空格分开。如：n=0,则输出：0x00 0x00 0x00 0x00n=5987456,则输出：0x80 0x5C 0x5B 0x00示例：输入：n = 0输出：0x00 0x00 0x00 0x..." }, { "title": "pythonTip 88 数字转换", "url": "/posts/pythonTip-88-%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:39:24 +0800", "snippet": "题目描述：转换规则：如果数字d是x的约数，则x可以被转换为x+d。现在给你两个正整数a和b，请你计算最少需要多少步能够将a转换成b。如果不能转换，则输出-1.如：a = 1， b = 6, 则输出3.（1→2→4→6 或 1→2→3→6）note:测试数据已于2014年11月13日更新，以前通过的代码不一定能够再次通过。示例：输入：a = 1b = 6输出：3分析:这个题目的意思就是要 把 a 变成 b。 转换规则就是： 如果数字d是x的约数，则x可以被转换为x+d。定理一： 1 是 所有数的因数。 所以只要 a &amp;lt;= b, 那么a 就肯定可以转化为 b。每次 +1 ..." }, { "title": "pythonTip 87 质数的数目", "url": "/posts/pythonTip-87-%E8%B4%A8%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:38:24 +0800", "snippet": "题目描述：给你一个正整数N(1 &amp;lt;= N &amp;lt;= 10000000)，求{1,2,3,…,N}中质数的个数。如N=3， 输出2.示例：输入：N = 1输出：0分析:参考 chenxw4tm 大佬 的思路.用一个list（L），把不是 素数的都标成0，其他都是素数标1有几个注意点：1、大于6的素数都在 6 的倍数前后，所以6个一组标[1,0,0,0,1,0]*(N/6) 有些6k+1/6k+5可能不是素数，先初始化为12、从小到大（2,3因为条件1已经排除，从5,7……开始）不断把素数p的倍数弄成0，剩下的就是所有素数。但是第二步有些简单的精细：​ 1、不需要..." }, { "title": "pythonTip 86 修剪数列", "url": "/posts/pythonTip-86-%E4%BF%AE%E5%89%AA%E6%95%B0%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:37:24 +0800", "snippet": "题目描述：给你一个整数数列a1,a2,a3,…,an,请你修改（不能删除，只能修改）最少的数字，使得数列严格单调递增。 数列存储在列表L中，你可以直接使用L，L的长度小于100000。注意：必须保证修改后的数列依然是整数序列，不能修改成小数。例如：L=[1,3,2],则输出1Note:数据已于2014-12-3加强， 原来能通过的代码可能无法再次通过。示例：输入： L = [1, 3, 2]输出： 1分析:我们的目的是得到一个 严格单调递增的数列。因此：只有两个数a， b时，如果后一个数大于前一个数(b&amp;gt;a)，那么我们不需要做任何的改变，否则我们需要有所改变。如果后一个数小..." }, { "title": "pythonTip 85 异或求和", "url": "/posts/pythonTip-85-%E5%BC%82%E6%88%96%E6%B1%82%E5%92%8C/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:36:24 +0800", "snippet": "题目描述：给你一个正整数N（1 &amp;lt;= N &amp;lt;= 100000000000000000),求1^2^3^…^N的值。A^B表示A和B按位异或。如N=3， 则输出0.示例：输入：N = 3输出：0分析:给一组数据，懂的都懂。0 =&amp;gt; 01 =&amp;gt; 12 = &amp;gt; 33 = &amp;gt; 04 =&amp;gt; 45 =&amp;gt; 16 =&amp;gt; 77 =&amp;gt; 0每4位就变为0。 所以懂了吧，小伙伴们。只需要从大到小开始异或，最后判断 i-1 是不是4的倍数，如果是，则终止循环。代码:ans =..." }, { "title": "pythonTip 84 Py的函数II", "url": "/posts/pythonTip-84-Py%E7%9A%84%E5%87%BD%E6%95%B0II/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:35:24 +0800", "snippet": "题目描述：这次的问题和上个题目《Py的函数I》相同，不过现在要求的n很大（0 &amp;lt;= n &amp;lt;= 1000000000). 请你输出F(n)取模20132013之后的值。示例：输入： n = 0输出： 1分析:对于这个题目，和上个题目一样，就是数据量上来了，原本的算法时间肯定超时了，但是我还是不死心，提交了一下，然后果然超时了。我就在想，这个可不可能会循环起来？ 为什么我会这么去想，因为最后的结果是要对 20132013 取模的，那么最后也就是只有 20132013 个不同的数。所以我猜，它有可能循环。 于是我 写了一个代码，把所有的结果保存下来，然后看看到什么..." }, { "title": "pythonTip 83 Py的函数I", "url": "/posts/pythonTip-83-Py%E7%9A%84%E5%87%BD%E6%95%B0I/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:34:24 +0800", "snippet": "题目描述：要过年了，Py闲着无聊，自己定义了一个函数F(n)=3*F(n-1)+2*F(n-2)+1，定义F(0)=1,F(1)=3. 现在给你一个整数n(0 &amp;lt;= n &amp;lt;= 1000)，请你计算F(n).由于这个值可能会非常大， 因此请你输出F(n)取模20132013之后的结果。示例：输入：n = 5输出：549分析:因为 0 &amp;lt;= n &amp;lt;= 1000。 数据量不是很大，所以直接模拟。数据量多大算是大呢？ 一半而言初略估计一下超过时间复杂度超过 10^9， 就放弃了。例如 时间复杂度为O(n^2) 那么当 n &amp;gt;..." }, { "title": "pythonTip 82 数字漩涡", "url": "/posts/pythonTip-82-%E6%95%B0%E5%AD%97%E6%BC%A9%E6%B6%A1/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:33:24 +0800", "snippet": "题目描述：给你一个正整数N，请你输出大小为NxN的数字漩涡。数字漩涡的定义请看下例。N=3，则输出：1 2 38 9 47 6 5N = 4，则输出：1 2 3 412 13 14 511 16 15 610 9 8 7注意：每行数字之间以一个空格隔开，行尾不要有多余的空格。示例：输入：N = 1输出：1分析:题目中的描述有些问题，数字的排版不是很对，所以我猜了一段时间。最后发现，原来就是一个蛇形填数问题。 我不给出分析过程，有兴趣的同学可以直接尝试一下。最后我贴出我的代码。写的比较糟糕。仅供参考。代码:ans = [[0 ..." }, { "title": "pythonTip 81 买苹果", "url": "/posts/pythonTip-81-%E4%B9%B0%E8%8B%B9%E6%9E%9C/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:32:24 +0800", "snippet": "题目描述：小明的妈妈买了N个苹果，想把它们都分给她的M个孩子。为了公平起见，她想让所有的孩子都分到一样多的苹果。那么她至少要再买多少个苹果呢？如：N=3, M=1, 则输出0 N=3，M=2，则输出1示例：输入：N = 3 M = 1输出： 0分析:数学题，见代码。代码:print(M - (N%M) if N % M else 0)" }, { "title": "pythonTip 80 单词接龙", "url": "/posts/pythonTip-80-%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:31:24 +0800", "snippet": "题目描述：今天说的单词接龙不是传统意义上的单词接龙。我们的游戏如下： 给你两个词，a和b，现在请你经过一系列转换，将a转换成b。转换规则：每个词在转换的时候，只能修改其中一个字母（不能删除或者插入）， 转换过程中得到的词必须是正确的词（在词典中存在的词）例如：我们想把单词spice转换成stock，可能的一个转换序列为： spice -&amp;gt; slice -&amp;gt; slick -&amp;gt; stick -&amp;gt; stock, 一共需要四步。 现在给你一个词典L，L中定义了所有合法的单词，L是一个由字符串构成的列表； 同时给你两个单词a和b，请你计算从a..." }, { "title": "pythonTip 79 考古学家的困境", "url": "/posts/pythonTip-79-%E8%80%83%E5%8F%A4%E5%AD%A6%E5%AE%B6%E7%9A%84%E5%9B%B0%E5%A2%83/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:30:24 +0800", "snippet": "题目描述：一个考古学家正在发掘古代的一座城市时，不小心被一个部分毁坏的石墙绊倒了。那个石墙上有数行奇异的数。这些数的前几位完整无缺，但不幸地，其余位的数字由于侵蚀作用而无法辨认。尽管如此，他注意到每一行完好的数字都像是2的幂的前几位，他就猜想这个石墙上原先的所有数都是2的幂。验证自己的想法，他选择了能看清楚的一些数写成列表，并把列表交给你，请你求出最小的2的幂使幂的前若干位与他提供的列表中的数一致。所以你必须写一个程序，对于给定的整数N(1 &amp;lt;= N &amp;lt;= 100)，求出最小的指数E使这个数的前若干位与N相同。注意：N的长度必须小于2^E的长度的一半。如N＝1..." }, { "title": "pythonTip 78 滑雪比赛", "url": "/posts/pythonTip-78-%E6%BB%91%E9%9B%AA%E6%AF%94%E8%B5%9B/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:29:24 +0800", "snippet": "题目描述：我们把场地分为一个个的格子，给每个格子标定一个整数，代表这个格子所代表的地面的海拔高度。 比赛的参赛者可以从任意一个格子开始，但只能向相邻的四个格子移动，并且目地格子的高度必须小于现在所在格子的高度。我们假设从一个格子滑行到另一个格子所用的时间为1个单位时间。现在告诉你滑雪场的大小为n*m, 并给你一个n行m列的整数二维列表H，表示每个格子的海拔高度。请你计算出在这个场地上最长能滑行多少时间。如：n = 4m = 4H= [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10,11,12], [13,14,15,16]]则输出 6.示例：输入：..." }, { "title": "pythonTip 77 寻找最小的数", "url": "/posts/pythonTip-77-%E5%AF%BB%E6%89%BE%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:28:24 +0800", "snippet": "题目描述：现在我们手里有一张2维的正整数(包括0)表. 对于第 i 行第 j 列的那个数我们有如下定义：a[i][j]是 a[i][k]{其中0&amp;lt;=k&amp;lt;j}和a[k][j]{其中0&amp;lt;=k&amp;lt;i}没有出现的那个最小的正整数比如a[0][0]=0;输出a[x][y]示例：输入：x = 0 y = 0输出：0分析:这个题给我一开始，我是想如何去求出一个数学公式去进行一个推导。我连最基础的暴力解法都没有想出来。后来，我直接采用更加暴力的方式，进行了一个模拟。手动模拟给出我的一组结果。 0 1 2 ..." }, { "title": "pythonTip 76 QQ音速", "url": "/posts/pythonTip-76-QQ%E9%9F%B3%E9%80%9F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:27:24 +0800", "snippet": "题目描述：最近Py开始玩qq音速，这个游戏只需要按4个键，上，下，左，右（分别用u,d,l,r表示）。 Py必须按照游戏规则，依次按下一系列键。问题是Py的手太胖了，他只能把两个手指放在方向键上。 Py把一个手指从键i移动到键j，要耗费w[i][j]的体力，而按键不需要耗费体力。 由于Py反应比较慢，所以他每次只能移动一个手指。现在可怜的Py问你，他最少耗费多少体力？ 假设Py一开始就把手指放在左、右两个键上。下面是w[i][j]数组   u d l r u 0 1 ..." }, { "title": "pythonTip 75 百度时间", "url": "/posts/pythonTip-75-%E7%99%BE%E5%BA%A6%E6%97%B6%E9%97%B4/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:26:24 +0800", "snippet": "题目描述：Baidu的服务器上使用的不是北京时间，而是Baidu时间。Baidu时间的时分秒与北京时间相同， 但是日期与北京时间不同，是用一个正整数表示从2000年1月1日开始经过了几天。现在就请大家设计一个程序将北京时间转换为百度时间。在本题中，闰年的年份是400的倍数，或者是4的倍数但不是100的倍数。比如2000和8888均为闰年，但6100不是。 现在给你一个字符串stime,表示待转化的北京时间（不含空格和TAB），正确的格式有两种：一种为：YYYY-MM-DD，（YYYY表示四位数年份，MM为两位月份，DD为两位日期）； 另一种为：MM/DD/YYYY，（YYYY表示四位数年..." }, { "title": "pythonTip 74 C(n,k)", "url": "/posts/pythonTip-74-C(n,k)/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:25:24 +0800", "snippet": "题目描述：求组合数 C ( n , k) 的奇偶性. 给你n和k(1&amp;lt;=n&amp;lt;=10^9,0&amp;lt;=k&amp;lt;=n),若其为奇数，则输出1，否则输出0. 如n=2,k=0,则输出1. 因为C(2,0)=1,为奇数。示例：输入： n = 2 k = 0输出： 1分析:首先来看卡 C(n, k) 是如何计算的。C(n,k) = n! / (k! * (n-k)! )所以： C(n, k) = C(n, n-k)对于 C(9, 4) = 9! / (4! * 5!) = 9 * 8 * 7 * 6 / (1*2*3*4)我们可以化简最后就变成了 ..." }, { "title": "pythonTip 73 分解 n!", "url": "/posts/pythonTip-73-%E5%88%86%E8%A7%A3-n!/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:24:24 +0800", "snippet": "题目描述：给你一个数 n (1 &amp;lt; n &amp;lt;= 1000000) ,求 n! (n的阶乘)的质因数分解形式.质因数分解形式为:n=p1^m1*p2^m2*p3^m3…… 这里 p1 &amp;lt; p2 &amp;lt; p3 &amp;lt; …… 为质数 如果 mi = 1, 则 ^ mi 就不需要输出 如： n=6, 则输出：6=2^4*3^2*5 n=7, 则输出：7=2^4*3^2*5*7 示例：输入： n = 2输出： 2 = 2分析:先统计后输出，输出的时候判断 其指数是否为1。n 的阶乘的质因数等于..." }, { "title": "pythonTip 72 球迷购票问题", "url": "/posts/pythonTip-72-%E7%90%83%E8%BF%B7%E8%B4%AD%E7%A5%A8%E9%97%AE%E9%A2%98/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:23:24 +0800", "snippet": "题目描述：球赛门票的售票处规定每位购票者限购一张门票，且每张门票售价50元。购票者中有m位手持50元钱币，另有n人手持100元。假设售票处开始售票时无零钱。问这m+n人有几种排队方式可使售票处不致出现找不出钱的局面。对给定的m,n(0&amp;lt;=m,n&amp;lt;=5000)，计算出排队方式总数。示例：输入： m = 3 n = 2输出： 5分析:假设 nums[m][n] 表示，m 个 50, n 个100 ，有 nums[m][n] 个 排队总数。 当 m &amp;lt; n 时， 结果为0. 例如 3 个 50， 4 个 100， 那么怎么排列，都是不可取的。 ..." }, { "title": "pythonTip 71 回文数 II", "url": "/posts/pythonTip-71-%E5%9B%9E%E6%96%87%E6%95%B0-II/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:22:24 +0800", "snippet": "题目描述：又是回文数！但这次有所不同了。 给定一个N进制正整数，把它的各位数字上数字倒过来排列组成一个新数，然后与原数相加，如果是回文数则停止，如果不是，则重复这个操作，直到和为回文数为止。如果N超过10，使用英文字母来表示那些大于9的数码。例如对16进制数来说，用A表示10，用B表示11，用C表示12，用D表示13，用E表示14，用F表示15。例如：10进制87则有：STEP1: 87+78=165STEP2: 165+561=726STEP3: 726+627=1353STEP4: 1353+3531=4884给你一个正整数N(2&amp;lt;=N&amp;lt;=16)和字符串M..." }, { "title": "pythonTip 70 最大整数", "url": "/posts/pythonTip-70-%E6%9C%80%E5%A4%A7%E6%95%B4%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:21:24 +0800", "snippet": "题目描述：设有n个正整数,将他们连接成一排,组成一个最大的多位整数. 例如:3个整数13,312,343,连成的最大整数为:34331213 又如:4个整数7,13,4,246连接成的最大整数为7424613 现在给你一个正整数列表L，请你输出用这些正整数能够拼接成的最大整数。note:测试数据已于2014年11月13日更新，以前通过的代码不一定能够再次通过。示例：输入： L = [13, 312, 343]输出： 34331213分析:初步分析和字典序有关系。 如果现在有两个数 4， 123， 那么最大的就是4123。 但是对于 32432 和 324 最大的应该是 3243243..." }, { "title": "pythonTip 69 回文数 I", "url": "/posts/pythonTip-69-%E5%9B%9E%E6%96%87%E6%95%B0-I/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:20:24 +0800", "snippet": "题目描述：若一个数（首位不为0）从左到右读与从右到左读都是一样，这个数就叫做回文数，例如12521就是一个回文数。给定一个正整数，把它的每一个位上的数字倒过来排列组成一个新数，然后与原数相加，如果是回文数则停止，如果不是，则重复这个操作，直到和为回文数为止。给定的数本身不为回文数。例如：87则有：STEP1: 87+78=165STEP2: 165+561=726STEP3: 726+627=1353STEP4: 1353+3531=4884现在给你一个正整数M（12 &amp;lt;= M &amp;lt;= 100),输出最少经过几步可以得到回文数。如果在8步以内（含8步）不可能得到..." }, { "title": "pythonTip 68 阶乘", "url": "/posts/pythonTip-68-%E9%98%B6%E4%B9%98/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:19:24 +0800", "snippet": "题目描述：N的阶乘定义为：N!=N×(N－1)×……×2×1 请编写一个程序，输出N的阶乘的十进制表示中从最末一个非0位开始自低位向高位数的第K位。现在给你N和K（0&amp;lt;=N&amp;lt;=10000，1&amp;lt;=K&amp;lt;=5），请你输出要求的数字(保证存在）。 例如：N=5,K=2,则输出1 note:（5!=120); N=8,K=3,结果为0 note:（8!=40320）示例：输入： N = 777 K = 5输出：1分析:这个给可能是一个数学公式的问题，但是我不想去推导了，就直接用最原始的方式进行一个模拟了。先是算出阶乘，然后去掉..." }, { "title": "pythonTip 67 101位自复制数", "url": "/posts/pythonTip-67-101%E4%BD%8D%E8%87%AA%E5%A4%8D%E5%88%B6%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:18:24 +0800", "snippet": "题目描述：什么叫自复制数呢？我们看看下面的例子：625×625=390625376×376=1413769376×9376=8790937690625×90625=8212890625如果一个数的平方末尾还是这个数本身，那么它就是自复制数。现在告诉你长度为101位的自复制数只有一个，你能把它找出来吗？请输出这个101位的自复制数。示例：90625×90625=8212890625分析:对于这个只有一个输出结果的，可以提前在自己电脑上面运行一下，然后直接输出就完事了。那么问题就来了，我们要怎么运行出这个结果呢？我们的数字平方，以数字 1234 为例： 1234* 1234-..." }, { "title": "pythonTip 66 排队", "url": "/posts/pythonTip-66-%E6%8E%92%E9%98%9F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:17:24 +0800", "snippet": "题目描述：全班N（2&amp;lt;=N&amp;lt;=45）个人排成一排，但因为高矮不齐，需要进行调整。调整的方法是，不调换左右次序，只让若干人后退一步变为第2排，使第一排留下的人从左到右的身高按降序排列，即右边的人不比左边的人高。如果第2排的人还不按降序排列，则照此办理，即再让第2排的若干人后退一步变为第3排，这样继续下去，直到所有排的人都按身高从高到低排列。现在将每个人的身高保存在列表L中，给你L，请你找出一种使第一排留下的人数尽可能多的调整方法，输出第一排留下的人数P及最后调整完共有几排数K，P和K之间以一个空格隔开。如，L=[130, 122, 112, 126, 126, ..." }, { "title": "pythonTip 65 RSA密码方程", "url": "/posts/pythonTip-65-RSA%E5%AF%86%E7%A0%81%E6%96%B9%E7%A8%8B/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:16:24 +0800", "snippet": "题目描述：在RSA密码体系中,欧几里得算法是加密或解密运算的重要组成部分。它的基本运算过程就是解 (x*a) % n = 1 这种方程。其中，x,a,n皆为正整数。现在给你a和n的值(1 &amp;lt; a,n &amp;lt; 140000000)，请你求出最小的满足方程的正整数解x（保证有解）.如：a = 1001, n = 3837，则输出23。示例：输入： a = 1001 n = 3837输出：23分析:此题使用扩展欧几里得算法求解。欧几里得算法： 欧几里德算法又称辗转相除法，用于计算两个整数a,b的最大公约数 gcd(a,b)。基本算法：设 a = qb + r，其中a，..." }, { "title": "pythonTip 64 IP判断", "url": "/posts/pythonTip-64-IP%E5%88%A4%E6%96%AD/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:15:24 +0800", "snippet": "题目描述：互联网上的每台计算机都有一个IP，合法的IP格式为：A.B.C.D。其中A、B、C、D均为位于[0, 255]中的整数。为了简单起见，我们规定这四个整数中不允许有前导零存在，如001这种情况。现在给你一个字符串s(s不含空白符),请你判断s是不是合法IP，若是，输出Yes,否则输出No.如：s=”202.115.32.24”, 则输出Yes; s=”a.11.11.11”, 则输出No.示例：输入： s = “202.115.32.24”输出： Yes分析:题目有问题，我如果添加了前导零的判断，会出错，去掉前导零的判断，反而对了。解题思路： 首先将 ip 这个字符串根据..." }, { "title": "pythonTip 63 平分果子", "url": "/posts/pythonTip-63-%E5%B9%B3%E5%88%86%E6%9E%9C%E5%AD%90/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:14:24 +0800", "snippet": "题目描述：桌子上有一堆数量不超过20的果子，每个果子的重量都是不超过20的正整数，全部记录在列表 L 里面。小明和小红决定平分它们，但是由于他们都太自私，没有人愿意对方比自己分得的总重量更多。而果子又不能切开，所以最后他们商量好的平分方案是这样的：他们可以把某些果子扔掉，再将剩下的果子平分，请你求出在这种方案下他们每人最多可以分得的糖果重量。例如，L = [1,2,3,4,5]，则输出：7L = [1,3,6]，则输出：0说明：对于样例1，他们最好的方案是把重量为 1 的果子扔掉，一人分得总重量为 7 的果子；样例2无法平分果子，因此答案是0。注意：数据已于2017/05/03加强，原来..." }, { "title": "pythonTip 62 乘法运算", "url": "/posts/pythonTip-62-%E4%B9%98%E6%B3%95%E8%BF%90%E7%AE%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:13:24 +0800", "snippet": "题目描述：给你两个整数a和b（0 &amp;lt; a,b &amp;lt; 1000),按笔算的格式输出a乘以b（a是被乘数，b是乘数）的运算过程，最后再输出一行 “********”（二十个星号）。乘号用小写字母“x”表示，每行末尾不能有多余的空格。具体输出格式见下面的例子：例1：a=89, b=13,则输出： 89x 13-------- 267 89-------- 1157********************例2：a=2, b=2,则输出： 2x 2-------- 4********************示例：输入：..." }, { "title": "pythonTip 61 正方形拼接", "url": "/posts/pythonTip-61-%E6%AD%A3%E6%96%B9%E5%BD%A2%E6%8B%BC%E6%8E%A5/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:12:24 +0800", "snippet": "题目描述：现在有一堆木棒，告诉你它们的长度，判断能否用这些木棒拼接成正方形。注意：所有的木棒都要用上，且不能截断。给你一个正整数list L, 如 L=[1,1,1,1], L中的每个数字代表一个木棒的长度，如果这些木棒能够拼成一个正方形，输出Yes，否则输出No。如L=[1,1,1,1]，则输出Yes;L=[1,1,1],则输出No。注：数据已于2014-03-11加强，之前通过的代码可能无法再次通过。示例：输入：L = [1, 1, 1, 1]输出：Yes分析:如果木棒总长度不是4的倍数，那么肯定不能组合成一个正方形。如果我们用排列组合的方式，那就相当于是 4^n 次方，肯定超时，就..." }, { "title": "pythonTip 60 最小公倍数I", "url": "/posts/pythonTip-60-%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0I/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:11:24 +0800", "snippet": "题目描述：给你一个正整数list L, 如 L=[2,8,3,50], 求列表中所有数的最小公倍数(不用考虑溢出问题）。如L=[3,5,10], 则输出30。示例：输入： L = [3, 6, 22]输出： 66分析:这是一个数学问题。代码:from math import gcdans = 1for num in L: gc = gcd(ans, num) ans = (ans * num) // gcprint(ans)" }, { "title": "pythonTip 59 换位置", "url": "/posts/pythonTip-59-%E6%8D%A2%E4%BD%8D%E7%BD%AE/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:10:24 +0800", "snippet": "题目描述：M个人围成一圈，每分钟相邻的两个人可以交换位置（只能有一对交换）。现在给你一个正整数n(0 &amp;lt; n &amp;lt; 1000)，求使n个人的顺序颠倒(即每个人左边相邻的人换到右边，右边相邻的人换到左边）所需的最少时间（分钟数）。如：n=4, 输出2.示例： 输入：n = 4 输出：2分析:1人：pass2人： 12 213人： 123 2134人：= 2 + 2 1234 2134 2143 5人: 3 + 2 12345 12354 13254 31254 32154不知道各位小伙子懂了没？根据奇偶来一分为二，因为这是成环的，不需..." }, { "title": "pythonTip 58 切西瓜", "url": "/posts/pythonTip-58-%E5%88%87%E8%A5%BF%E7%93%9C/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:09:24 +0800", "snippet": "题目描述：小Py要吃西瓜，想知道切了n刀后，最多能切出多少块？请你们帮助下小Py.给你一个正整数n（0 &amp;lt; n &amp;lt; 10^3),你输出一个数字，代表最多能切多少块。如n=1, 输出2。示例： 输入：n = 1 输出：2分析:这个问题的本质是n个平面最多可以把空间划分成多少块.我们来看如下三个问题：1) n个点最多可以把一条直线划分成多少段，通项公式记为A(n)。2) n条直线最多可以把平面划分多成个区域，通项公式记为B(n)。3) n个平面最多可以把空间划分多少块，通项公式记为C(n)。第一个问题,很简单,A(n) = n+1第二个问题,假设平面上已有n条..." }, { "title": "pythonTip 57 那些年我们集过的卡片", "url": "/posts/pythonTip-57-%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E4%BB%AC%E9%9B%86%E8%BF%87%E7%9A%84%E5%8D%A1%E7%89%87/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:08:24 +0800", "snippet": "题目描述：不知道大家的童年有没有过和我相似的经历。我记得小时候经常买干脆面，不为别的，只是因为里面有一张人物卡片。其实有很多这样的活动都有一个相同的模式：N 种人物卡片，每次买一包干脆面随机得到一张。当你集齐这 N 种人物时，就会有相应的奖励。那时候还不懂怎么计算概率，白白给人家送了好多钱，吃了好多干脆面。现在的任务是，给你一个正整数 N (1 &amp;lt;= N &amp;lt;= 10^4)，请你帮我从期望的角度计算平均需要买多少包干脆面才能集齐这 N 种人物。提醒：由于结果可能不是整数，所以结果只保留到小数点后两位。示例： 输入：N = 1 输出：1.00分析: 1种卡片..." }, { "title": "pythonTip 54 最长回文子串可不简单", "url": "/posts/pythonTip-54-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%E5%8F%AF%E4%B8%8D%E7%AE%80%E5%8D%95/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:07:24 +0800", "snippet": "题目描述：记得一副有趣的对联: “雾锁山头山锁雾, 天连水尾水连天”, 上联和下联都是回文的.当然类似的还有: “上海自来水水来自海上, 山西悬空寺寺空悬西山”.回文是什么意思? 就是把内容反过来读也是和原来一样的, 譬如 abccba, xyzyx, 这些都是回文的.然而我们更感兴趣的是在一个英文字符串 L 中, 怎么找出最长的回文子串.例如 L = “caayyhheehhbbbhhjhhyyaac”, 那么它最长的回文子串是 “hhbbbhh”.这个任务看似简单, 但是如果我告诉你 L 的长度可能会接近 10^4, 问题似乎就变麻烦了.不管怎么说, 加油吧骚年.示例：输入：L = ..." }, { "title": "pythonTip 53 神の安♂排", "url": "/posts/pythonTip-53-%E7%A5%9E%E3%81%AE%E5%AE%89-%E6%8E%92/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:06:24 +0800", "snippet": "题目描述：记得有一次全班去唱K, 其中有个活动是情歌对唱. 具体操作流程是这样的:准备好 21 个阄(我们班 15 男 6 女), 其中只有两个是有标记的, 每人随意抓取一个, 最后取到有标记的阄的两个人去点首情歌对唱.旁边一哥们儿幽幽地对我说, 看来搅基真是神的安排啊, 你看我们班的男女人数, 搅基的几率 C(15,2)/C(21,2) 刚好是 1/2.给跪了, 这哥们儿对数字太敏感了, 简直是拉马努金转世啊. 不过我随之想到一个问题: (21, 15) 真的是神的唯一安排吗? 其实不是的,神还有很多类似的安排. 比如 (4, 3), 显然 C(4,2)/C(3,2) 也等于 1/2,..." }, { "title": "pythonTip 52 因子平方和", "url": "/posts/pythonTip-52-%E5%9B%A0%E5%AD%90%E5%B9%B3%E6%96%B9%E5%92%8C/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:05:24 +0800", "snippet": "题目描述：6 的因子有 1, 2, 3 和 6, 它们的平方和是 1 + 4 + 9 + 36 = 50. 如果 f(N) 代表正整数 N 所有因子的平方和, 那么 f(6) = 50.现在令 F 代表 f 的求和函数, 亦即 F(N) = f(1) + f(2) + .. + f(N), 显然 F 一开始的 6 个值是: 1, 6, 16, 37, 63 和 113.那么对于任意给定的整数 N (1 &amp;lt;= N &amp;lt;= 10^8), 输出 F(N) 的值.示例： 输入：N = 1 输出：1分析:先假设 N = 10.那么 \\(F(10) = f(1) + f..." }, { "title": "pythonTip 51 降序排序", "url": "/posts/pythonTip-51-%E9%99%8D%E5%BA%8F%E6%8E%92%E5%BA%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:04:24 +0800", "snippet": "题目描述：给你一个list L, 如 L=[2, 8, 3, 50], 对L进行降序排序并输出,如样例L的结果为[50, 8, 3, 2]示例： 输入： L = [4, 2, 25, 7777777, 100, 3, 77777777, 77777777, 77777777, 77777777]输出：[77777777, 77777777, 77777777, 77777777, 7777777, 100, 25, 4, 3, 2]分析:本质上面就是将数组排序后输出。 我在这里使用了 python 提供的内置的 sorted 函数，里面有一个参数 reverse。 就是告诉编译器，是否..." }, { "title": "pythonTip 50 Py扔铅球", "url": "/posts/pythonTip-50-Py%E6%89%94%E9%93%85%E7%90%83/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:03:24 +0800", "snippet": "题目描述：Py不但是编程大牛，而且是运动健将。比如说扔铅球，1000m，现在Py参加校园扔铅球比赛，给你Py的身高a（双精度数），球落地点与Py头部的连线与水平线的夹角 b（弧度），要你编写一个程序计算Py扔铅球的水平距离。a，b都是浮点数，注意b是弧度，其中， 140 &amp;lt; a &amp;lt; 200, 0 &amp;lt; b &amp;lt; 1.5.输出你求出的水平距离，保留到小数点后三位。如，a = 165.5, b=1.1, 则输出84.234示例： 输入：a = 165.5 b = 1.1输出：84.234分析:这个就是一个数学问题，自己画一下图就好了。代..." }, { "title": "pythonTip 49 进制转换", "url": "/posts/pythonTip-49-%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:02:24 +0800", "snippet": "题目描述：给你一个十进制数a，将它转换成b进制数,如果b&amp;gt;10,用大写字母表示（10用A表示，等等）a为32位整数，2 &amp;lt;= b &amp;lt;= 16。如a=3,b = 2, 则输出11示例： 输入：a = 7 b = 2输出：111分析:进制转换，进制转换是还是比较简单的一个问题，然后有一个点需要注意，那就是负数的问题，这个要特殊的处理一下。代码:char_lst = [&#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &..." }, { "title": "pythonTip 48 砝码问题II", "url": "/posts/pythonTip-48-%E7%A0%9D%E7%A0%81%E9%97%AE%E9%A2%98II/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:01:24 +0800", "snippet": "题目描述：有一组砝码，重量互不相等，分别为m1、m2、m3……mn；每种砝码的数量有无限个。 现要用这些砝码去称物体的重量,给你一个重量n,请你判断有给定的砝码能否称出重量n。 现在给你一个正整数列表w和一个正整数n，列表w中的第i个元素w[i]表示第i种砝码的重量，n表示要你判断的重量。如果给定砝码能称出重量n，输出Yes，否则输出No。例如，w=[2,5,11], n=9,则输出Yes（取两个2，一个5）。示例： 输入：w = [1, 2] n = 18输出：Yes分析:给定一组重量不相等的砝码，每种砝码有无限个，然后现在要用这些砝码去称物体的重量n。让你去判断能否称出指定的重量，..." }, { "title": "pythonTip 47 杨辉三角", "url": "/posts/pythonTip-47-%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 21:00:24 +0800", "snippet": "题目描述：还记得中学时候学过的杨辉三角吗？具体的定义这里不再描述，你可以参考以下的图形：11 11 2 11 3 3 11 4 6 4 11 5 10 10 5 1…………..先在给你一个正整数n，请你输出杨辉三角的前n层注意：层数从1开始计数,每层数字之间用一个空格隔开，行尾不要有空格。如n=2,则输出：11 1示例： 输入：n = 2输出：11 1分析:杨辉三角，很经典的一个东西。 题目里面是描述不清晰，导致无法判断，所以，我这里把它的格式排版改了一下，应该就好做很多了。代码:yh = [[0],[1]]for iii in range(2, n+1): new_yh = [..." }, { "title": "pythonTip 46 取石子游戏", "url": "/posts/pythonTip-46-%E5%8F%96%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:59:24 +0800", "snippet": "题目描述：有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。现在给出初始的两堆石子的数目a和b，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。如果你是胜者，输出Win,否则输出Loose。例如，a=3,b=1, 则输出Win(你先在a中取一个，此时a=2，b=1,此时无论对方怎么取，你都能将所有石子都拿走).示例： 输入：a = 2 b = 1 输出： Loose分析:这种情况下是颇为复杂的。我们 \\((ak,bk)..." }, { "title": "pythonTip 45 砝码问题", "url": "/posts/pythonTip-45-%E7%A0%9D%E7%A0%81%E9%97%AE%E9%A2%98/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:58:24 +0800", "snippet": "题目描述：有一组砝码，重量互不相等，分别为m1、m2、m3……mn；它们可取的最大数量分别为x1、x2、x3……xn。 现要用这些砝码去称物体的重量,问能称出多少种不同的重量。 现在给你两个正整数列表w和n， 列表w中的第i个元素w[i]表示第i个砝码的重量，列表n的第i个元素n[i]表示砝码i的最大数量。i从0开始，请你输出不同重量的种数。如：w=[1,2], n=[2,1], 则输出5（分析：共有五种重量：0,1,2,3,4）示例： 输入：w = [1, 2] n = [2, 1]输出：5分析:因为没有看到给定的数据范围，所以我就假设数据量比较大，开始解决办法，然后想啊想，想啊想..." }, { "title": "pythonTip 44 超级楼梯", "url": "/posts/pythonTip-44-%E8%B6%85%E7%BA%A7%E6%A5%BC%E6%A2%AF/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:57:24 +0800", "snippet": "题目描述：有一楼梯共n级，刚开始时你在第一级，若每次只能跨上一级或二级，要走上第n级，共有多少种走法？ 现在给你一个正整数n（0 &amp;lt; n &amp;lt; 10001）示例： 输入：n = 2 输出：1分析:当前为第 n 个台阶时，只可能是第 n-1 个台阶或者是 第 n-2个台阶走上来的。定义 fac_lst[n] 是走到第 n 级时的走法，难么 fac_lst[n] = fac_lst[n-1] + fac_lst[n-2]。那么也就是和上一题的 斐波拉契数列一样了。 看代码。代码:fac_lst = [1, 1]for i in range(2, 10001)..." }, { "title": "pythonTip 43 斐波那契数列", "url": "/posts/pythonTip-43-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:56:24 +0800", "snippet": "题目描述：斐波那契数列为1,1,2,3,5,8…。数列从第三项起满足，该项的数是其前面两个数之和。现在给你一个正整数n（n &amp;lt; 10000), 请你求出第n个斐波那契数取模20132013的值（斐波那契数列的编号从1开始。)例如：n=1, 则输出：1n=4, 则输出：3示例： 输入：n = 2输出：1分析:斐波拉契数列 f[n] = f[n-1] + f[n+2]这里要注意不能全部相加完了以后再取余，最好是要一边相加一边取余，这样是最好的。因为如果是最后才取余，在中间运算的时候就会出现很大的数，虽然python对整数的位数没有限制，但是在大数运算的时候，其运算性能会受到影..." }, { "title": "pythonTip 42 分拆素数和", "url": "/posts/pythonTip-42-%E5%88%86%E6%8B%86%E7%B4%A0%E6%95%B0%E5%92%8C/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:55:24 +0800", "snippet": "题目描述：把一个偶数拆成两个不同素数的和，有几种拆法呢？现在来考虑考虑这个问题，给你一个不超过10000的正的偶数n，计算将该数拆成两个不同的素数之和的方法数，并输出。如n=10，可以拆成3+7，只有这一种方法，因此输出1.示例： 输入：n = 4输出：0分析:我们先找到10000以内的所有素数，然后再去依次 的判断是否有两个质数相加一个等于 n。 然后我们再数一下可以组合成的个数。所以我们第一步就是找到所有的质数，如何找呢，网上有很多的办法，可以找一下 素数筛， 这方面的资料还是很多的，可以找一下。代码:prime_lst = [i for i in range(2, 10000)]..." }, { "title": "pythonTip 41 Py数", "url": "/posts/pythonTip-41-Py%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:54:24 +0800", "snippet": "题目描述：Py从小喜欢奇特的东西，而且天生对数字特别敏感，一次偶然的机会，他发现了一个有趣的四位数2992，这个数，它的十进制数表示，其四位数字之和2+9+9+2=22，它的十六进制数BB0，其四位数字之和也为22，同时它的十二进制数表示1894，其四位数字之和也为22，啊哈，真是巧啊。Py非常喜欢这种四位数，由于他的发现，所以这里我们命名其为Py数。现在给你一个十进制4位数n，你来判断n是不是Py数，若是，则输出Yes，否则输出No。如n=2992，则输出Yes； n = 9999，则输出No。示例： 输入：n = 1234输出：No分析:按照我们一般的思路而言，就是先将给定数转化为..." }, { "title": "pythonTip 40 整数解", "url": "/posts/pythonTip-40-%E6%95%B4%E6%95%B0%E8%A7%A3/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:53:24 +0800", "snippet": "题目描述：给你两个整数a和b（-10000&amp;lt;a,b&amp;lt;10000），请你判断是否存在两个整数，他们的和为a，乘积为b。若存在，输出Yes,否则输出No示例： 输入：a = 9 b = 15 输出：No例如：a=9,b=15, 此时不存在两个整数满足上述条件，所以应该输出No。分析:这个题目的描述有一点的问题，好吧，是问题很大。现在我们再来看看这一个题目，我们小小的思考一下。我们的第一想法是什么？ 我们这样去做兴许是可以的，毕竟我们的数据量相对于而言不是很大。但是如果我们尝试 循环两个数的话，那这样的计算量就比较大了。 示例代码：for i in range(..." }, { "title": "pythonTip 39 简单题之输出格式练习", "url": "/posts/pythonTip-39-%E7%AE%80%E5%8D%95%E9%A2%98%E4%B9%8B%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F%E7%BB%83%E4%B9%A0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:52:24 +0800", "snippet": "题目描述：给你一个字符串列表L，用一行代码顺序输出L中的元素，元素之间以一个空格隔开，注意行尾不要有空格，输出单独占一行。如L=[‘abc’,’d’,’efg’], 则输出abc d efg。示例： 输入： L = [“abc”, “d”, “efg”]输出：abc d efg分析:和上一题类似，基本一样，就不做分析了。代码:print(&quot; &quot;.join(L))" }, { "title": "pythonTip 38 简单题之列表转换", "url": "/posts/pythonTip-38-%E7%AE%80%E5%8D%95%E9%A2%98%E4%B9%8B%E5%88%97%E8%A1%A8%E8%BD%AC%E6%8D%A2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:51:24 +0800", "snippet": "题目描述：给你一个字符串列表L，请用一行代码将列表所有元素拼接成一个字符串并输出。如L=[‘abc’,’d’,’efg’], 则输出abcdefg。示例： 输入：L = [“abc”, “d”, “efg”]输出：abcdefg分析:想分析一下，好像分析不了。直接用 join() 就好。如果代码为 : &quot;,&quot;.join(L) 那么结果就是： abc,d,efg代码:print(&quot;&quot;.join(L))" }, { "title": "pythonTip 37 简单题之勾股定理", "url": "/posts/pythonTip-37-%E7%AE%80%E5%8D%95%E9%A2%98%E4%B9%8B%E5%8B%BE%E8%82%A1%E5%AE%9A%E7%90%86/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:50:24 +0800", "snippet": "题目描述：给你直角三角形的两个直角边的边长a,b,请你求出其斜边边长，结果保留小数点后三位小数。如a=3, b =4, 则输出5.000。示例： 输入： a = 3.0 b = 4.0输出： 5.000分析:勾股定理： a2 + b2 = c2其中 a, b 为直角边，c 为斜边。求 c 的 公式如下:\\(c = \\sqrt(a^2 + b^2)\\)代码:from math import sqrtprint(&quot;{:.3f}&quot;.format(sqrt(a*a+b*b)))" }, { "title": "pythonTip 36 最大非连续子序列", "url": "/posts/pythonTip-36-%E6%9C%80%E5%A4%A7%E9%9D%9E%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-13 20:49:24 +0800", "snippet": "题目描述：给你一个整数list L, 如 L=[2,-3,3,50], 求L的一个非连续子序列，使其和最大，输出最大子序列的和。这里非连续子序列的定义是，子序列中任意相邻的两个数在原序列里都不相邻。例如，对于L=[2,-3,3,50]， 输出52（分析：很明显，该列表最大非连续子序列为[2,50]).示例： 输入： L = [2, -3, 3, 50]输出：52分析:上一题我们求了最大连续子序列的和，这一题是求最大非连续子序列的和。对于我们的这个问题，我们来稍微的小分析一下。我们首先定义数组 L[k] 表示第 k 个位置的最大非连续子序列和。那么我们要确定第 L[k+1] 个位置的最大..." }, { "title": "pythonTip 35 最大连续子序列", "url": "/posts/pythonTip-35-%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-09 16:41:06 +0800", "snippet": "题目描述：给你一个整数list L, 如 L=[2,-3,3,50], 求L的一个连续子序列，使其和最大，输出最大子序列的和。 例如，对于L=[2,-3,3,50]， 输出53（分析：很明显，该列表最大连续子序列为[3,50]).示例： 输入：L = [2, -3, 3, 50] 输出：53分析：首先我们来分析一下示例，53 = 3 + 50接下来我们开始分析了，要求一个 连续的子序列，使其和最大。怎么办？首先想到的就是，遍历这个子序列的起点和终点，然后求和，找到最大的和。或者是确定子序列的起点和长度，求和，再求最大值。那么程序的代码可能就是这样的：maxx = 0for i in ..." }, { "title": "pythonTip 34 密码生成", "url": "/posts/pythonTip-34-%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-09 16:40:06 +0800", "snippet": "题目描述：生活在当代社会，我们要记住很多密码，银行卡，qq，人人，微博，邮箱等等。小P经过一番思索之后，发明了下面这种生成密码方法：给定两个正整数a和b, 利用a / b我们会得到一个长度无限的小数(若a / b不是无限小数，比如1/2=0.5,我们认为0.5是0.5000000…，同样将其看做无限长的小数），小P将该小数点后第x位到第y位的数字当做密码，这样，无论密码有多长，小P只要记住a,b,x,y四个数字就可以了，牢记密码再也不是那么困难的事情了。现在告诉你a,b,x,y（0 &amp;lt; a,b &amp;lt;= 20132013, 0 &amp;lt; x &amp;lt..." }, { "title": "pythonTip 33 大幂次运算", "url": "/posts/pythonTip-33-%E5%A4%A7%E5%B9%82%E6%AC%A1%E8%BF%90%E7%AE%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-09 16:34:06 +0800", "snippet": "题目描述：给你两个正整数a(0 &amp;lt; a &amp;lt; 100000)和n(0 &amp;lt;= n &amp;lt;=100000000000)，计算(a^n) % 20132013并输出结果示例： 输入：a = 3453 n = 0 输出：1分析：一般情况下幂运算可以用循环一次一次的去计算。例如: a^b次方ans = 1for i in range(b): ans *= a但是如果对于特别大的数的时候，使用模拟方法，就会消耗大量的时间了。例如：如果b=100000000000,那么我们就需要循环100000000000次，并且做100000000000次..." }, { "title": "pythonTip 32 山峰的个数", "url": "/posts/pythonTip-32-%E4%B8%89%E8%A7%92%E5%BD%A2%E5%BD%A2%E7%8A%B6/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-09 16:33:06 +0800", "snippet": "题目描述：给以一个三角形的三边长a,b和c(边长是浮点数),请你判断三角形的形状。 若是锐角三角形，输出R, 若是直角三角形，输出Z， 若是钝角三角形，输出D， 若三边长不能构成三角形，输出W.示例： 输入：a = 3.0 b = 5.0 c = 4.0 输出：Z分析：我们首先来看一下，如何判断三边可以构成一个三角形。这个我们已经在前面的题目已经讨论了。（任意两边之和大于第三边。）然后我们再来研究一下：如何构成一个 直角三角形？ 直角边的平方和等于斜边。根据构成直角三角形的理论，我就开始猜一猜 锐角三角形还有钝角三角形。我感觉，如果两个直角边的平方和大于斜边的平方和。我就觉得一个这..." }, { "title": "pythonTip 31 山峰的个数", "url": "/posts/pythonTip-31-%E5%B1%B1%E5%B3%B0%E7%9A%84%E4%B8%AA%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-09 16:32:06 +0800", "snippet": "题目描述：十一假期,小P出去爬山,爬山的过程中每隔10米他都会记录当前点的海拔高度(以一个浮点数表示), 这些值序列保存在一个由浮点数组成的列表h中。回到家中，小P想研究一下自己经过了几个山峰，请你帮他计算一下，输出结果。 例如：h=[0.9,1.2,1.22,1.1,1.6,0.99], 将这些高度顺序连线，会发现有两个山峰，故输出一个2(序列两端不算山峰)示例： 输入：h = [0.9, 1.2, 1.22, 1.1, 1.6, 0.99] 输出：2分析：我们如何来判断是一个山峰呢？ 假设现在有三个点，a,b,c。 只要 b &amp;gt; a, b &amp;gt; c, 那..." }, { "title": "pythonTip 30 National Day", "url": "/posts/pythonTip-30-National-Day/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-08 16:32:06 +0800", "snippet": "题目描述：马上国庆节了，用一个英文单词描述你此时此刻的心情。分析我国庆节心情还是比较丰富的，我去见了我一个当兵的好兄弟。在这里， Happy 就完事了。代码print(&quot;Happy&quot;)" }, { "title": "pythonTip 29 判断三角形", "url": "/posts/pythonTip-29-%E5%88%A4%E6%96%AD%E4%B8%89%E8%A7%92%E5%BD%A2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-08 16:31:06 +0800", "snippet": "题目描述：给你三个整数a,b,c, 判断能否以它们为三个边长构成三角形。 若能，输出YES，否则输出NO。示例： 输入：a = 5 b = 5 c = 5 输出：YES分析：判断 3边是否可以构成三角形： 任意两边之和大于第三边。有些初学者可能只写一个组判断，这样是不对的，应该写三组判断。代码：if (a + b &amp;gt; c) and (a + c &amp;gt; b) and (b + c &amp;gt; a): print(&quot;YES&quot;)else: print(&quot;NO&quot;)" }, { "title": "pythonTip 28 相同数字", "url": "/posts/pythonTip-28-%E7%9B%B8%E5%90%8C%E6%95%B0%E5%AD%97/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-08 16:30:06 +0800", "snippet": "题目描述：给你一个整数列表L,判断L中是否存在相同的数字， 若存在，输出YES，否则输出NO。示例： 输入：L = [123, 432, 23] 输出：NO分析：判断一个列表中是否有重复的元素，我们可以先排序，然后再一个一个的遍历，判断当前元素是否和前一个元素相同。这是一种办法。但是在 python里面有一种叫做集合的数据结构，我们可以利用这种数据结构去做数组重复性检查。具体操作，可以看代码。集合：里面没有重复元素。代码S = set(L)if len(S) == len(L): print(&quot;NO&quot;)else: print(&quot;YES&quot;)" }, { "title": "pythonTip 27 加油站", "url": "/posts/pythonTip-27-%E5%8A%A0%E6%B2%B9%E7%AB%99/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-08 16:29:06 +0800", "snippet": "题目描述：一个环形的公路上有n个加油站，编号为0,1,2,…n-1, 每个加油站加油都有一个上限，保存在列表limit中，即limit[i]为第i个加油站加油的上限， 而从第i个加油站开车开到第(i+1)%n个加油站需要cost[i]升油,cost为一个列表。 现在有一辆开始时没有油的车，要从一个加油站出发绕这个公路跑一圈回到起点。 给你整数n，列表limit和列表cost,你来判断能否完成任务。 如果能够完成任务，输出起始的加油站编号，如果有多个,输出编号最小的。 如果不能完成任务，输出-1。示例： 输入：n = 2 limit = [1, 2] cost = [2, 2] 输出：..." }, { "title": "pythonTip 26 序列判断", "url": "/posts/pythonTip-26-%E5%BA%8F%E5%88%97%E5%88%A4%E6%96%AD/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-08 16:28:06 +0800", "snippet": "题目描述：给你一个整数组成的列表L，按照下列条件输出： 若L是升序排列的,则输出”UP”; 若L是降序排列的,则输出”DOWN”; 若L无序，则输出”WRONG”。示例： 输入：L = [1, 1, 3, 3, 4] 输出：UP分析：可以先得到一个升序的列表up_t，然后把up_t 倒过来变成降序down_t。最后用原列表和这两个列表进行对比。代码：up_t = sorted(L)down_t = up_t[::-1]if up_t == L: print(&quot;UP&quot;)elif down_t == L: print(&quot;DOWN&quot;)el..." }, { "title": "pythonTip 25 格式化时间", "url": "/posts/pythonTip-25-%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%97%B6%E9%97%B4/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-12-08 16:27:06 +0800", "snippet": "题目描述：给你一个时间t（t是一个字典，共有六个字符串key(year,month,day,hour,minute,second),值为每个值为数字组成的字符串， 如t={‘year’:’2013’,’month’:’9’,’day’:’30’,’hour’:’16’,’minute’:’45’,’second’:’2’} 请将其按照以下格式输出， 格式:XXXX-XX-XX XX:XX:XX。如上例应该输出： 2013-09-30 16:45:02。示例：输入：t = {“year”: “2013”, “month”: “9”, “day”: “30”, “hour”: “16”, “..." }, { "title": "python 列表推导式生成多维数组", "url": "/posts/python-%E5%88%97%E8%A1%A8%E6%8E%A8%E5%AF%BC%E5%BC%8F%E7%94%9F%E6%88%90%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/", "categories": "python", "tags": "小技巧", "date": "2020-11-23 16:27:06 +0800", "snippet": "列表推导式生成一维数组列表推导式常见的 3 种形式： [x for x in data if condition]这里的 if 主要是起到一个条件判断的作用，data 里面的数据，只有满足 if 的条件才会被留下。 [exp1 if condition else exp2 for x in data]此处if…else主要起赋值作用，当data中的数据满足if条件时将其做exp1处理，否则按照exp2处理，最后统一生成为一个数据列表。 [exp1 if condition else exp2 for x in data if condition]前面..." }, { "title": "pythonTip 24 一马当先", "url": "/posts/pythonTip-24-%E4%B8%80%E9%A9%AC%E5%BD%93%E5%85%88/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-19 14:24:44 +0800", "snippet": "题目描述：下过象棋的人都知道，马只能走’日’字形（包括旋转90°的日），现在想象一下，给你一个n行m列网格棋盘， 棋盘的左下角有一匹马，请你计算至少需要几步可以将它移动到棋盘的右上角，若无法走到，则输出-1. 如n=1，m=2,则至少需要1步；若n=1，m=3,则输出-1。分析图形的搜索算法常见的有两种：深度优先（DFS）和 广度优先（BFS）以下图为例说明两种算法的不同之处：深度优先不断沿着顶点的深度方向遍历，直到没有邻接点时再返回。访问顺序： A-B-D-E-C-F-H-G例如这里： 第一次从A到达B点时，还可以向 D 点访问，所以先访问点D。访问完点D后，发现没有邻接点了，就返回到..." }, { "title": "pythonTip 23 365Or366", "url": "/posts/pythonTip-23-365Or366/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-19 14:23:44 +0800", "snippet": "题目描述：一年有多少天，这是个大问题，很值得思考。现在给你一个年份year(year为四位数字的字符串，如”2008”,”0012”), 你输出这一年的天数。如year=”2013”, 则输出365。分析一年有365 天还是 366 天，就是判断这一年是否为闰年。 如果可以被400整除 那就是闰年 如果能被4整除且不能被100整除，那就是闰年year = int(year)if year % 100 == 0: if year % 400 == 0: print(366) else: print(365)else: if year % 4..." }, { "title": "pythonTip 22 时间就是金钱", "url": "/posts/pythonTip-22-%E6%97%B6%E9%97%B4%E5%B0%B1%E6%98%AF%E9%87%91%E9%92%B1/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-19 14:22:44 +0800", "snippet": "题目描述：给你两个时间st和et(00:00:00&amp;lt;=st &amp;lt;= et&amp;lt;=23:59:59), 请你给出这两个时间间隔的秒数。 如：st=”00:00:00”, et=”00:00:10”, 则输出10.分析我在这里时间把时间 转换成秒，然后取差值。h_s, m_s, s_s = st.split(&quot;:&quot;)h_e, m_e, s_e = et.split(&#39;:&#39;)time_s = 3600 * int(h_s) + 60 * int(m_s) + int(s_s)time_e = 3600 * int(h_e)..." }, { "title": "pythonTip 21 回文子串", "url": "/posts/pythonTip-21-%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-19 14:21:44 +0800", "snippet": "题目描述：给你一个字符串a和一个正整数n,判断a中是否存在长度为n的回文子串。如果存在，则输出YES，否则输出NO。 回文串的定义：记串str逆序之后的字符串是str1，若str=str1,则称str是回文串，如”abcba”.分析我们对于回文的判断，已经比较熟悉了。我们要找到是否存在 长度为 n 的回文子串，那么首先一个比较直观的想法就是：把每一个长度为 n 的子串都判断一下是否为 回文串。当没有判断的剩下串长度 小于 n 就没有必要进行判断了。 毕竟已经不满足长度为 n 这一个条件了。# 用来判断 当前字符串是否为 回文串def palindrome(string): str..." }, { "title": "pythonTip 20 信息加密", "url": "/posts/pythonTip-20-%E4%BF%A1%E6%81%AF%E5%8A%A0%E5%AF%86/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 20:26:44 +0800", "snippet": "题目描述：给你个小写英文字符串a和一个非负数b(0&amp;lt;=b&amp;lt;26), 将a中的每个小写字符替换成字母表中比它大b的字母。这里将字母表的z和a相连，如果超过了z就回到了a。例如a=”cagy”, b=3,则输出 ：fdjb分析这种题目有种感觉，字符串成环的味道。一般而言可以使用取余的方式。 但是自从我不知道从哪里学到 把两个相同串首位相连，然后直接加上 偏移量就可以了。省得取余数。所以搞得我现在，每次遇到这种题目，我就拼接一次。nums = [chr(97+i) for i in range(26)]nums += [chr(97+i) for i in ran..." }, { "title": "pythonTip 19 单身情歌", "url": "/posts/pythonTip-19-%E5%8D%95%E8%BA%AB%E6%83%85%E6%AD%8C/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 20:25:44 +0800", "snippet": "题目描述：抓不住爱情的我 总是眼睁睁看它溜走 …现在来练习一下发现爱的能力，给你一个字符串a,如果其中包含”LOVE”（love不区分大小写)则输出LOVE，否则输出SINGLE。例如：a = “OurWorldIsFullOfLOVE”则输出：LOVE分析这个就有点点生气了，这不是疯狂暗示我这个单身狗吗。生气.ing，，叉腰.jpg这个就是 查找子串了。 我先把 母串，全部变为小写。 然后在 母串 里面找 love 这个 子串。 找到了就找到了，也不会让我脱单。mmpa = a.lower()if &#39;love&#39; in a: print(&quot;LOVE&quo..." }, { "title": "pythonTip 18 逆解最大公约数与最小公倍数", "url": "/posts/pythonTip-18-%E9%80%86%E8%A7%A3%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E4%B8%8E%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 20:24:44 +0800", "snippet": "题目描述：我们经常遇到的问题是给你两个数，要你求最大公约数和最小公倍数。今天我们反其道而行之，给你两个数a和b，计算出它们分别是哪两个数的最大公约数和最小公倍数。输出这两个数，小的在前，大的在后，以空格隔开。若有多组解，输出它们之和最小的那组。注：所给数据都有解，不用考虑无解的情况.分析江湖规矩： “如果暴力不能解决问题，再想想其他的解决办法。”我先根据这两个数的大小，把这两个数给安排一下。保证 a &amp;lt; b最小公倍数 和 最大公约数的转换，我是知道的。最小公倍数 = a * b / gcd(a, b)那么最小公倍 最大也只可能是 a * b， 最小 也是 b所以，嘿嘿，嘿..." }, { "title": "pythonTip 17 公约数的个数", "url": "/posts/pythonTip-17-%E5%85%AC%E7%BA%A6%E6%95%B0%E7%9A%84%E4%B8%AA%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 20:23:44 +0800", "snippet": "题目描述：给你两个正整数a,b, 输出它们公约数的个数。例如：a = 24， b = 36则输出：6分析公约数，我就不是很喜欢 约数 这个概念。我喜欢用因数一点。因数就是 如果 a % b == 0 那么 b 就是 a 的一个因数。这里选较小的一个数，可以少循环几次。c = min(a, b)res = 0for i in range(1, c+1): if a % i == 0 and b % i == 0: res += 1print(res)" }, { "title": "pythonTip 16 人民币金额打印", "url": "/posts/pythonTip-16-%E4%BA%BA%E6%B0%91%E5%B8%81%E9%87%91%E9%A2%9D%E6%89%93%E5%8D%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 20:22:44 +0800", "snippet": "题目描述：银行在打印票据的时候，常常需要将阿拉伯数字表示的人民币金额转换为大写表示，现在请你来完成这样一个程序。在中文大写方式中，0到10以及100、1000、10000被依次表示为： 零 壹 贰 叁 肆 伍 陆 柒 捌 玖 拾 佰 仟 万以下的例子示范了阿拉伯数字到人民币大写的转换规则：1 壹圆11 壹拾壹圆111 壹佰壹拾壹圆101 壹佰零壹圆-1000 负壹仟圆1234567 壹佰贰拾叁万肆仟伍佰陆拾柒圆 现在给你一个整数a( a &amp;lt;100000000), 请你打印出人民币大写表示. 例如：a=1则输出：壹圆注..." }, { "title": "pythonTip 15 大小写转换", "url": "/posts/pythonTip-15-%E5%A4%A7%E5%B0%8F%E5%86%99%E8%BD%AC%E6%8D%A2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 20:21:44 +0800", "snippet": "题目描述：给定一个字符串a, 将a中的大写字母 转换成小写，其它字符不变，并输出。例如：a=”aaaaaabbbDDDDD”则输出：aaaaaabbbddddd分析python 里面有字符串中有内置的方法，专门干这个事的。 str.lower() 把所有大写换成小写。str.upper() 把所有小写换成大写。print(a.lower())" }, { "title": "pythonTip 14 Python之美", "url": "/posts/pythonTip-14-Python%E4%B9%8B%E7%BE%8E/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 20:20:44 +0800", "snippet": "题目描述：输出Python之禅。注意：输出python之禅的源码即可，不要转换为英文。（小小的提示：print this.s)分析这个真的是一个 憨皮的题目。很服气，最后通过代码如下。使用 python 打印 通过不了。import thisthis.s" }, { "title": "pythonTip 13 光棍的悲伤", "url": "/posts/pythonTip-13-%E5%85%89%E6%A3%8D%E7%9A%84%E6%82%B2%E4%BC%A4/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 20:18:44 +0800", "snippet": "题目描述：光棍们对1总是那么敏感，因此每年的11.11被戏称为光棍节。小Py光棍几十载，光棍自有光棍的快乐。让我们勇敢地面对光棍的身份吧，现在就证明自己：给你一个整数a，数出a在二进制表示下1的个数，并输出。例如：a=7则输出：3分析这个没有啥好分析的，数一下 该数二进制下，1 的个数吧。使用 位运算就好，位运算 666另外： 我单身，但是我，emmmm， 确实悲伤。res = 0while a: res += (a &amp;amp; 1) a &amp;gt;&amp;gt;= 1print(res)" }, { "title": "pythonTip 12 结尾非零数的奇偶性", "url": "/posts/pythonTip-12-%E7%BB%93%E5%B0%BE%E9%9D%9E%E9%9B%B6%E6%95%B0%E7%9A%84%E5%A5%87%E5%81%B6%E6%80%A7/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 19:18:44 +0800", "snippet": "题目描述：给你一个正整数列表 L, 判断列表内所有数字乘积的最后一个非零数字的奇偶性。如果为奇数输出1,偶数则输出0.。例如：L=[2,8,3,50]则输出：0分析这个题目和之前 尾数0的个数 的题目相似。都是，如果把数组中所有数都乘起来，结果会比较大。但是这个题目有一点区别，那就是，最后只要求一个不为0的数字的奇偶性。那么我干脆就只保存最后一个不为0的数。这样的话就不会出现特别大的整数了。res = 1for num in L: res *= num while res % 10 == 0: res //= 10while res % 10 == 0: ..." }, { "title": "pythonTip 11 结尾0的个数", "url": "/posts/pythonTip-11-%E7%BB%93%E5%B0%BE0%E7%9A%84%E4%B8%AA%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-18 19:17:10 +0800", "snippet": "题目描述：给你一个正整数列表 L, 输出L内所有数字的乘积末尾0的个数。(提示:不要直接相乘,数字很多,相乘得到的结果可能会很大)。例如： L=[2,8,3,50],则输出：2分析把列表里面所有的数都乘起来，最后再去统计末尾 0 的个数也可以。 但是这样就像题目说的一样，结果可能会很大。在累计相乘的过程中，顺便数 0 的个数，那么最后的结果依然可能会比较大。并且虽然 python 的整数没有位数的限制，但是在比较大的整数相乘的时候，性能就会下降，毕竟python底层是C语言实现的，而C语言对于整数是有限制的。那么我们再分析一下，两个数相乘，可能会出现末尾 0 的情况。2 * 5 = 10..." }, { "title": "pythonTip 10 最下公倍数", "url": "/posts/pythonTip-10-%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:10 +0800", "snippet": "题目描述：给你两个正整数a和b， 输出它们的最小公倍数。例如：a = 3, b = 5则输出：15分析最小公倍数 = a * b / gcd(a, b)from math import gcdprint(a*b//gcd(a, b))" }, { "title": "pythonTip 9 最大公约数", "url": "/posts/pythonTip-9-%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:09 +0800", "snippet": "题目描述：给你两个正整数a和b， 输出它们的最大公约数。例如：a = 3, b = 5则输出：1分析python 中的 math 模块里面有一个gcd 函数，专门就是干这个的。from math import gcdprint(gcd(a, b))" }, { "title": "pythonTip 8 求中位数", "url": "/posts/pythonTip-8-%E6%B1%82%E4%B8%AD%E4%BD%8D%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:08 +0800", "snippet": "题目描述：给你一个整数列表L, 输出L的中位数（若结果为小数，则保留一位小数）。例如： L=[0,1,2,3,4]则输出：2分析求一个数组的中位数的思路。 先对数组进行排序。 判断这个数组是奇数还是偶数。 奇数就是中间的哪一个数。偶数就是 中间两个数的平均值。题目有一个要求，如果结果是小数，保留一位。 我就在想，如果不是小数，是不是就不应该有小数位。 我做了一个判断。可以通过，不加这个判断，也可以通过。因此，我感觉题目的描述和测试数据和我想的有点点不太对劲。 不加判断```python3L.sort()lenght = len(L)if lenght % 2 == 1: r..." }, { "title": "pythonTip 7 求矩形面积", "url": "/posts/pythonTip-7-%E6%B1%82%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:07 +0800", "snippet": "题目描述：已知矩形长a,宽b,输出其面积和周长，面积和周长以一个空格隔开。例如：a = 3, b = 8则输出：24 22分析矩形面积 = 长 * 宽矩形周长 = (长 + 宽) * 2print(a*b, a+a+b+b)" }, { "title": "pythonTip 6 求解100以内的所有素数", "url": "/posts/pythonTip-6-%E6%B1%82%E8%A7%A3100%E4%BB%A5%E5%86%85%E7%9A%84%E6%89%80%E6%9C%89%E7%B4%A0%E6%95%B0/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:06 +0800", "snippet": "题目描述：输出100以内的所有素数，素数之间以一个空格区分（注意，最后一个数字之后不能有空格）。分析判断一个数是否为素数，就是判断这个数 能否有可以被除了 1和它本身整除 的其他数。 如果有，则不是素数。因为题目数据量不大，只有 1~100， 就写一个简单的就好了。a = [2]for i in range(2, 101): flag = 0 for j in a: if i % j == 0: flag = 1 break if flag == 0: a.append(i)a = [str(ch..." }, { "title": "pythonTip 5 输出字符奇数位置的字符串", "url": "/posts/pythonTip-5-%E8%BE%93%E5%87%BA%E5%AD%97%E7%AC%A6%E5%A5%87%E6%95%B0%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:05 +0800", "snippet": "题目描述：给你一个字符串 a， 输出a中奇数位置字符构成的字符串（位置编号从1开始）。例如：a=‘xyzwd’则输出:xzd分析是之前的 倒序输出 字符串一样。使用切片的方式。object[begin:end:step] begin: 开始位置end: 结束位置step: 步长最后所切割的区间是 [) 左闭右开。列表下标从 0 开始，题目说位置编号从 1 开始。 所以最后答案就是 得到所有偶数位置的字符。print(a[::2])" }, { "title": "pythonTip 4 输出字典key", "url": "/posts/pythonTip-4-%E8%BE%93%E5%87%BA%E5%AD%97%E5%85%B8key/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:04 +0800", "snippet": "题目描述：给你一字典a，如a={1:1,2:2,3:3}，输出字典a的key，以’,’连接，如‘1,2,3’。要求key按照字典序升序排列(注意key可能是字符串）。例如：a={1:1,2:2,3:3}, 则输出：1,2,3分析使用了 列表推导式 。 首先是得到 所有字典的key。 然后放到一个列表里面。最后，使用 .join() 将其连接起来。得到 字典所有 key 的方法是: dict.keys()列表推导式 类似于一个 for 循环。 在创建列表的时候效率比较高。下面的列表推导式，等价于：lst = []for key in a.keys(): lst.append(str(..." }, { "title": "pythonTip 3 字符串逆序", "url": "/posts/pythonTip-3-%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:03 +0800", "snippet": "题目描述：给你一个字符串 a， 请你输出逆序之后的a。例如：a=‘xydz’则输出：zdyx分析python 里面的字符串属于可迭代的对象。 可以使用 切片的方式。print(a[::-1])" }, { "title": "pythonTip 2 列表排序", "url": "/posts/pythonTip-2-%E5%88%97%E8%A1%A8%E6%8E%92%E5%BA%8F/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:02 +0800", "snippet": "题目描述：给你一个列表 L, 对L进行升序排序并输出排序后的列表。例如：L = [8,2,50,3]则输出：[2,3,8,50]分析python 里面内置了一些排序的函数。 所以，直接使用就好了。常见的有两个。 list.sort() 是对象上面的方法。 这会直接改变 对象元素的位置。 sorted(L) 是一个函数，会改变 返回一个新的对象。L.sort()print(L)" }, { "title": "pythonTip 1 a+b", "url": "/posts/pythonTip-1-a+b/", "categories": "ACM, pythonTip", "tags": "简单", "date": "2020-11-17 19:17:01 +0800", "snippet": "题目描述：给你两个数a、b，请你计算它们的和，并输出。例如： a = 3, b = 2则输出：5提示：挑战python栏目的所有题目，题目中所给变量使用前不用声明，也不用赋值，系统自动赋值。如本题，只需一行代码即可： print a + b系统会自动为a和b赋值，并检查代码执行结果和标准答案是否相同。分析这就没啥好分析的了print(a + b)" } ]
